PROCEDURE "OTEBW_OZ"."OZ::TRAN_OZ_ERCHC" ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 
 declare i int;
declare Cnt int;
declare CLT_TST nvarchar(17);
declare MANDT NVARCHAR(000003);
declare BELNR NVARCHAR(000012);
declare LFDNR NVARCHAR(000003);
declare OPBEL NVARCHAR(000012);
declare CPUDT NVARCHAR(000008); 
declare BUDAT NVARCHAR(000008);
declare INTOPBEL NVARCHAR(000012);
declare INTCPUDT NVARCHAR(000008);
declare INTBUDAT NVARCHAR(000008);
declare TOBRELEASD NVARCHAR(000001);
declare SIMULATED NVARCHAR(000001);
declare INVOICED NVARCHAR(000001);
declare SPCANC NVARCHAR(000001);
declare STATUPD NVARCHAR(000001);
declare STATUPD_CANC NVARCHAR(000001);
declare exit handler for sqlexception begin
  insert into OTEBW."Log" ("CurrSchema", "CurrObject", "ErrorCode", "ErrorMess") values (::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

-- ERCHC
t_ModifERCHC = select * from "OTEBW_OZ"."REMOTE_ERCHC_CHG" where CLT_PROCESSED = ' ' order by CLT_TST;
select count(*) into Cnt from :t_ModifERCHC;
insert into "OTEBW_OZ"."ERCHC_CHG" select MANDT,BELNR,LFDNR,OPBEL,CPUDT,BUDAT,INTOPBEL,INTCPUDT,INTBUDAT,TOBRELEASD,SIMULATED,INVOICED,SPCANC,STATUPD,STATUPD_CANC,CLT_ACTION,CLT_PROCESSED,TO_TIMESTAMP(CLT_TST, 'YYYYMMDDHH24MISSFF3') AS CLT_TST,TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') as CLT_TST_TO from :t_ModifERCHC;
insert into "OTEBW"."Log" ("CurrSchema", "CurrObject", "Cnt", "ErrorMess") values ('OTEBW_OZ', 'ERCHC', ::rowcount, 'Transfer');

for i in 1 .. :Cnt do
  MANDT = :t_ModifERCHC.MANDT[:i];
  BELNR = :t_ModifERCHC.BELNR[:i];
  LFDNR = :t_ModifERCHC.LFDNR[:i];
  OPBEL = :t_ModifERCHC.OPBEL[:i];
  CPUDT = :t_ModifERCHC.CPUDT[:i];
  BUDAT = :t_ModifERCHC.BUDAT[:i];
  INTOPBEL = :t_ModifERCHC.INTOPBEL[:i];
  INTCPUDT = :t_ModifERCHC.INTCPUDT[:i];
  INTBUDAT = :t_ModifERCHC.INTBUDAT[:i];
  TOBRELEASD = :t_ModifERCHC.TOBRELEASD[:i];
  SIMULATED = :t_ModifERCHC.SIMULATED[:i];
  INVOICED = :t_ModifERCHC.INVOICED[:i];
  SPCANC = :t_ModifERCHC.SPCANC[:i];
  STATUPD = :t_ModifERCHC.STATUPD[:i];
  STATUPD_CANC = :t_ModifERCHC.STATUPD_CANC[:i];
  CLT_TST = :t_ModifERCHC.CLT_TST[:i];
  
  update "OTEBW_OZ"."REMOTE_ERCHC_CHG" set CLT_PROCESSED = 'X' 
  where MANDT=:MANDT 
  and BELNR=:BELNR 
  and LFDNR=:LFDNR 
  and CLT_TST=:CLT_TST;
  
  update "OTEBW_OZ"."ERCHC_CHG" set CLT_TST_TO = TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3') 
  where MANDT=:MANDT 
  and BELNR=:BELNR 
  and LFDNR=:LFDNR 
  and CLT_TST_TO = TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') 
  and CLT_TST<TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3');
  
  if :t_ModifERCHC.CLT_ACTION[:i]='I' then
  	insert into "OTEBW_OZ"."ERCHC" (MANDT,BELNR,LFDNR,OPBEL,CPUDT,BUDAT,INTOPBEL,INTCPUDT,INTBUDAT,TOBRELEASD,SIMULATED,INVOICED,SPCANC,STATUPD,STATUPD_CANC) 
  		values 
  	(:MANDT,:BELNR,:LFDNR,:OPBEL,:CPUDT,:BUDAT,:INTOPBEL,:INTCPUDT,:INTBUDAT,:TOBRELEASD,:SIMULATED,:INVOICED,:SPCANC,:STATUPD,:STATUPD_CANC);
elseif :t_ModifERCHC.CLT_ACTION[:i]='U' then
  update "OTEBW_OZ"."ERCHC" set OPBEL=:OPBEL,CPUDT=:CPUDT,BUDAT=:BUDAT,INTOPBEL=:INTOPBEL,INTCPUDT=:INTCPUDT,INTBUDAT=:INTBUDAT,TOBRELEASD=:TOBRELEASD,SIMULATED=:SIMULATED,INVOICED=:INVOICED,SPCANC=:SPCANC,STATUPD=:STATUPD,STATUPD_CANC=:STATUPD_CANC where MANDT=:MANDT  and BELNR=:BELNR  and LFDNR=:LFDNR ;
elseif :t_ModifERCHC.CLT_ACTION[:i]='D' then
  delete from "OTEBW_OZ"."ERCHC" where MANDT=:MANDT and BELNR=:BELNR and LFDNR=:LFDNR;
end if;

end for;
END;
