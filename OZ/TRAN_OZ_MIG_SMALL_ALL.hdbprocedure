PROCEDURE "OTEBW_OZ"."OZ::TRAN_OZ_MIG_SMALL_ALL" (in IN_load_uid nvarchar(32))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS

BEGIN

/***************************** 
	Write your procedure logic 
 *****************************/

 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_BUT000" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_BUT0ID" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EANL" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EANLH" ( :IN_load_uid );

CALL "OTEBW_OZ"."OZ::TRAN_OZ_DFKKBPTAXNUM" ( :IN_load_uid ); 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EGRID" ( :IN_load_uid ); 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EGRIDT" ( :IN_load_uid ); 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ELPASS" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EPROFASS" ( :IN_load_uid ); 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ESERVICE" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ETTAF" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EUIGRID" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EUIINSTLN" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EUITRANS" ( :IN_load_uid ) ;
CALL "OTEBW_OZ"."OZ::TRAN_OZ_EVER" ( :IN_load_uid ) ;
CALL "OTEBW_OZ"."OZ::TRAN_OZ_FKKVKP" ( :IN_load_uid ) ;


CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_AGREGACE" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_BI_PROFIL" ( :IN_load_uid ); 
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_HEAT_SOURCE" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_SOURCE_H" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_PRICE_LINE" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_PRICE_LIST" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_SOURCE" ( :IN_load_uid );
CALL "OTEBW_OZ"."OZ::TRAN_OZ_ZOZE_VALUE_TYPES" ( :IN_load_uid );
/**/
END;

/*
declare exit handler for sqlexception begin

insert into "SAPABAP1"."ZBW_LOAD_LOG" ("MANDT", "TST", "LOAD_UID", "CNT", "CURR_SCHEMA", "CURR_OBJECT", "ERROR_CODE", "ERROR_MESS" )
values
('400', TO_VARCHAR(CURRENT_TIMESTAMP,'YYYYMMDDHHMMSS'), :IN_load_uid, 0, ::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

/*

insert into "SAPABAP1"."ZBW_LOAD_LOG" ("MANDT", "TST", "LOAD_UID", "CNT", "CURR_SCHEMA", "CURR_OBJECT", "ERROR_CODE", "ERROR_MESS") 
values
('400',TO_VARCHAR(CURRENT_TIMESTAMP,'YYYYMMDDHHMMSS'), :IN_load_uid, ::rowcount, ::current_object_schema, ::current_object_name, 0, 'Transfer');
commit;
*/