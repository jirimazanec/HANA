PROCEDURE "OTEBW_OZ"."OZ::TRAN_OZ_DBERCHZ1" ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN

/***************************** 
	Write your procedure logic 
 *****************************/
 
declare i int;
declare Cnt int;
declare CLT_TST nvarchar(17);
declare MANDT NVARCHAR(000003);
declare BELNR NVARCHAR(000012);
declare BELZEILE NVARCHAR(000006);
declare CSNO NVARCHAR(000006);
declare BELZART NVARCHAR(000006);
declare ABSLKZ NVARCHAR(000001);
declare DIFFKZ NVARCHAR(000001);
declare BUCHREL NVARCHAR(000001);
declare MENGESTREL NVARCHAR(000001);
declare BETRSTREL NVARCHAR(000001);
declare STGRQNT NVARCHAR(000006);
declare STGRAMT NVARCHAR(000006);
declare PRINTREL NVARCHAR(000001);
declare AKLASSE NVARCHAR(000004);
declare BRANCHE NVARCHAR(000010);
declare TVORG NVARCHAR(000004);
declare GEGEN_TVORG NVARCHAR(000004);
declare TAX_TVORG NVARCHAR(000004);
declare LINESORT NVARCHAR(000004);
declare AB NVARCHAR(000008);
declare BIS NVARCHAR(000008);
declare TIMTYPZA NVARCHAR(000001);
declare SCHEMANR NVARCHAR(000010);
declare SNO NVARCHAR(000004);
declare PROGRAMM NVARCHAR(000008);
declare MASSBILL NVARCHAR(000003);
declare SAISON NVARCHAR(000010);
declare TIMBASIS NVARCHAR(000003);
declare TIMTYP NVARCHAR(000001);
declare FRAN_TYPE NVARCHAR(000001);
declare KONZIGR NVARCHAR(000010);
declare TARIFTYP NVARCHAR(000010);
declare TARIFNR NVARCHAR(000010);
declare KONDIGR NVARCHAR(000010);
declare STTARIF NVARCHAR(000010);
declare GEWKEY NVARCHAR(000008);
declare WDHFAKT integer;
declare TEMP_AREA NVARCHAR(000008);
declare DRCKSTUF NVARCHAR(000002);
declare ABGGRND1 NVARCHAR(000004);
declare ABGGRND2 NVARCHAR(000004);
declare ABGGRND3 NVARCHAR(000004);
declare ABGGRND4 NVARCHAR(000004);
declare ABGGRND5 NVARCHAR(000004);
declare ABGGRND6 NVARCHAR(000004);
declare ABGGRND7 NVARCHAR(000004);
declare ABGGRND8 NVARCHAR(000004);
declare ABGGRND9 NVARCHAR(000004);
declare ABGGRND10 NVARCHAR(000004);
declare EIN01 NVARCHAR(000010);
declare EIN02 NVARCHAR(000010);
declare EIN03 NVARCHAR(000010);
declare EIN04 NVARCHAR(000010);
declare AUS01 NVARCHAR(000010);
declare AUS02 NVARCHAR(000010);
declare MASS1 NVARCHAR(000003);
declare MASS2 NVARCHAR(000003);
declare MASS3 NVARCHAR(000003);
declare MASS4 NVARCHAR(000003);
declare DATUM1 NVARCHAR(000008);
declare DATUM2 NVARCHAR(000008);
declare RABZUS NVARCHAR(000010);
declare BACKCANC01 NVARCHAR(000004);
declare BACKCANC02 NVARCHAR(000004);
declare BACKCANC03 NVARCHAR(000004);
declare BACKCANC04 NVARCHAR(000004);
declare BACKCANC05 NVARCHAR(000004);
declare BACKCANC NVARCHAR(000004);
declare BACKEXEC NVARCHAR(000004);
declare BACKDOCNO NVARCHAR(000012);
declare BACKDOCLINE NVARCHAR(000006);
declare DYNCANC01 NVARCHAR(000004);
declare DYNCANC02 NVARCHAR(000004);
declare DYNCANC03 NVARCHAR(000004);
declare DYNCANC04 NVARCHAR(000004);
declare DYNCANC05 NVARCHAR(000004);
declare DYNCANC NVARCHAR(000004);
declare DYNEXEC NVARCHAR(000004);
declare LRATESTEP NVARCHAR(000010);
declare PEB NVARCHAR(000001);
declare OPLFDNR NVARCHAR(000004);
declare STAFO NVARCHAR(000006);
declare ARTMENGE NVARCHAR(000001);
declare STATTART NVARCHAR(000008);
declare TIMECONTRL NVARCHAR(000002);
declare TCNUMTOR DECIMAL(000008,000000);
declare TCDENOMTOR DECIMAL(000008,000000);
declare TIMTYPQUOT NVARCHAR(000001);
declare AKTIV NVARCHAR(000001);
declare KONZVER NVARCHAR(000010);
declare PERTYP NVARCHAR(000002);
declare ERCHV_ANCHOR NVARCHAR(000001);
declare OUCONTRACT NVARCHAR(000010);
declare IURU_VOL NVARCHAR(000002);
declare IURU_RAO NVARCHAR(000005);
declare IURU_FOR NVARCHAR(000001);
declare IURU_FIS NVARCHAR(000001);
declare IURU_COT NVARCHAR(000002);
declare IURU_CTT NVARCHAR(000002);
declare IURU_MIN NVARCHAR(000005);
declare IURU_IND NVARCHAR(000010);
declare IURU_MWSKZ NVARCHAR(000002);
declare IUSK_MWSKZ_OLD NVARCHAR(000002);
declare V_ABRMENGE DECIMAL(000017,000000);
declare N_ABRMENGE DECIMAL(000014,000000);
declare V_ZAHL1 DECIMAL(000017,000000);
declare N_ZAHL1 DECIMAL(000014,000000);
declare V_ZAHL2 DECIMAL(000017,000000);
declare N_ZAHL2 DECIMAL(000014,000000);
declare V_ZAHL3 DECIMAL(000017,000000);
declare N_ZAHL3 DECIMAL(000014,000000);
declare V_ZAHL4 DECIMAL(000017,000000);
declare N_ZAHL4 DECIMAL(000014,000000);
declare V_ZEITANT DECIMAL(000017,000000);
declare N_ZEITANT DECIMAL(000014,000000);

declare exit handler for sqlexception begin
  insert into OTEBW."Log" ("CurrSchema", "CurrObject", "ErrorCode", "ErrorMess") values (::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

-- DBERCHZ1

t_ModifDBERCHZ1 = select * from "OTEBW_OZ"."REMOTE_DBERCHZ1_CHG" where CLT_PROCESSED = ' ' order by CLT_TST;
select count(*) into Cnt from :t_ModifDBERCHZ1;
insert into "OTEBW_OZ"."DBERCHZ1_CHG" select MANDT,BELNR,BELZEILE,CSNO,BELZART,ABSLKZ,DIFFKZ,BUCHREL,MENGESTREL,BETRSTREL,STGRQNT,STGRAMT,PRINTREL,AKLASSE,BRANCHE,TVORG,GEGEN_TVORG,TAX_TVORG,LINESORT,AB,BIS,TIMTYPZA,SCHEMANR,SNO,PROGRAMM,MASSBILL,SAISON,TIMBASIS,TIMTYP,FRAN_TYPE,KONZIGR,TARIFTYP,TARIFNR,KONDIGR,STTARIF,GEWKEY,WDHFAKT,TEMP_AREA,DRCKSTUF,ABGGRND1,ABGGRND2,ABGGRND3,ABGGRND4,ABGGRND5,ABGGRND6,ABGGRND7,ABGGRND8,ABGGRND9,ABGGRND10,EIN01,EIN02,EIN03,EIN04,AUS01,AUS02,MASS1,MASS2,MASS3,MASS4,DATUM1,DATUM2,RABZUS,BACKCANC01,BACKCANC02,BACKCANC03,BACKCANC04,BACKCANC05,BACKCANC,BACKEXEC,BACKDOCNO,BACKDOCLINE,DYNCANC01,DYNCANC02,DYNCANC03,DYNCANC04,DYNCANC05,DYNCANC,DYNEXEC,LRATESTEP,PEB,OPLFDNR,STAFO,ARTMENGE,STATTART,TIMECONTRL,TCNUMTOR,TCDENOMTOR,TIMTYPQUOT,AKTIV,KONZVER,PERTYP,ERCHV_ANCHOR,OUCONTRACT,IURU_VOL,IURU_RAO,IURU_FOR,IURU_FIS,IURU_COT,IURU_CTT,IURU_MIN,IURU_IND,IURU_MWSKZ,IUSK_MWSKZ_OLD,V_ABRMENGE,N_ABRMENGE,V_ZAHL1,N_ZAHL1,V_ZAHL2,N_ZAHL2,V_ZAHL3,N_ZAHL3,V_ZAHL4,N_ZAHL4,V_ZEITANT,N_ZEITANT,CLT_ACTION,CLT_PROCESSED,TO_TIMESTAMP(CLT_TST, 'YYYYMMDDHH24MISSFF3') AS CLT_TST,TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') as CLT_TST_TO from :t_ModifDBERCHZ1;
insert into "OTEBW"."Log" ("CurrSchema", "CurrObject", "Cnt", "ErrorMess") values ('OTEBW_OZ', 'DBERCHZ1', ::rowcount, 'Transfer');

for i in 1 .. :Cnt do
  MANDT = :t_ModifDBERCHZ1.MANDT[:i];
  BELNR = :t_ModifDBERCHZ1.BELNR[:i];
  BELZEILE = :t_ModifDBERCHZ1.BELZEILE[:i];
  CSNO = :t_ModifDBERCHZ1.CSNO[:i];
  BELZART = :t_ModifDBERCHZ1.BELZART[:i];
  ABSLKZ = :t_ModifDBERCHZ1.ABSLKZ[:i];
  DIFFKZ = :t_ModifDBERCHZ1.DIFFKZ[:i];
  BUCHREL = :t_ModifDBERCHZ1.BUCHREL[:i];
  MENGESTREL = :t_ModifDBERCHZ1.MENGESTREL[:i];
  BETRSTREL = :t_ModifDBERCHZ1.BETRSTREL[:i];
  STGRQNT = :t_ModifDBERCHZ1.STGRQNT[:i];
  STGRAMT = :t_ModifDBERCHZ1.STGRAMT[:i];
  PRINTREL = :t_ModifDBERCHZ1.PRINTREL[:i];
  AKLASSE = :t_ModifDBERCHZ1.AKLASSE[:i];
  BRANCHE = :t_ModifDBERCHZ1.BRANCHE[:i];
  TVORG = :t_ModifDBERCHZ1.TVORG[:i];
  GEGEN_TVORG = :t_ModifDBERCHZ1.GEGEN_TVORG[:i];
  TAX_TVORG = :t_ModifDBERCHZ1.TAX_TVORG[:i];
  LINESORT = :t_ModifDBERCHZ1.LINESORT[:i];
  AB = :t_ModifDBERCHZ1.AB[:i];
  BIS = :t_ModifDBERCHZ1.BIS[:i];
  TIMTYPZA = :t_ModifDBERCHZ1.TIMTYPZA[:i];
  SCHEMANR = :t_ModifDBERCHZ1.SCHEMANR[:i];
  SNO = :t_ModifDBERCHZ1.SNO[:i];
  PROGRAMM = :t_ModifDBERCHZ1.PROGRAMM[:i];
  MASSBILL = :t_ModifDBERCHZ1.MASSBILL[:i];
  SAISON = :t_ModifDBERCHZ1.SAISON[:i];
  TIMBASIS = :t_ModifDBERCHZ1.TIMBASIS[:i];
  TIMTYP = :t_ModifDBERCHZ1.TIMTYP[:i];
  FRAN_TYPE = :t_ModifDBERCHZ1.FRAN_TYPE[:i];
  KONZIGR = :t_ModifDBERCHZ1.KONZIGR[:i];
  TARIFTYP = :t_ModifDBERCHZ1.TARIFTYP[:i];
  TARIFNR = :t_ModifDBERCHZ1.TARIFNR[:i];
  KONDIGR = :t_ModifDBERCHZ1.KONDIGR[:i];
  STTARIF = :t_ModifDBERCHZ1.STTARIF[:i];
  GEWKEY = :t_ModifDBERCHZ1.GEWKEY[:i];
  WDHFAKT = :t_ModifDBERCHZ1.WDHFAKT[:i];
  TEMP_AREA = :t_ModifDBERCHZ1.TEMP_AREA[:i];
  DRCKSTUF = :t_ModifDBERCHZ1.DRCKSTUF[:i];
  ABGGRND1 = :t_ModifDBERCHZ1.ABGGRND1[:i];
  ABGGRND2 = :t_ModifDBERCHZ1.ABGGRND2[:i];
  ABGGRND3 = :t_ModifDBERCHZ1.ABGGRND3[:i];
  ABGGRND4 = :t_ModifDBERCHZ1.ABGGRND4[:i];
  ABGGRND5 = :t_ModifDBERCHZ1.ABGGRND5[:i];
  ABGGRND6 = :t_ModifDBERCHZ1.ABGGRND6[:i];
  ABGGRND7 = :t_ModifDBERCHZ1.ABGGRND7[:i];
  ABGGRND8 = :t_ModifDBERCHZ1.ABGGRND8[:i];
  ABGGRND9 = :t_ModifDBERCHZ1.ABGGRND9[:i];
  ABGGRND10 = :t_ModifDBERCHZ1.ABGGRND10[:i];
  EIN01 = :t_ModifDBERCHZ1.EIN01[:i];
  EIN02 = :t_ModifDBERCHZ1.EIN02[:i];
  EIN03 = :t_ModifDBERCHZ1.EIN03[:i];
  EIN04 = :t_ModifDBERCHZ1.EIN04[:i];
  AUS01 = :t_ModifDBERCHZ1.AUS01[:i];
  AUS02 = :t_ModifDBERCHZ1.AUS02[:i];
  MASS1 = :t_ModifDBERCHZ1.MASS1[:i];
  MASS2 = :t_ModifDBERCHZ1.MASS2[:i];
  MASS3 = :t_ModifDBERCHZ1.MASS3[:i];
  MASS4 = :t_ModifDBERCHZ1.MASS4[:i];
  DATUM1 = :t_ModifDBERCHZ1.DATUM1[:i];
  DATUM2 = :t_ModifDBERCHZ1.DATUM2[:i];
  RABZUS = :t_ModifDBERCHZ1.RABZUS[:i];
  BACKCANC01 = :t_ModifDBERCHZ1.BACKCANC01[:i];
  BACKCANC02 = :t_ModifDBERCHZ1.BACKCANC02[:i];
  BACKCANC03 = :t_ModifDBERCHZ1.BACKCANC03[:i];
  BACKCANC04 = :t_ModifDBERCHZ1.BACKCANC04[:i];
  BACKCANC05 = :t_ModifDBERCHZ1.BACKCANC05[:i];
  BACKCANC = :t_ModifDBERCHZ1.BACKCANC[:i];
  BACKEXEC = :t_ModifDBERCHZ1.BACKEXEC[:i];
  BACKDOCNO = :t_ModifDBERCHZ1.BACKDOCNO[:i];
  BACKDOCLINE = :t_ModifDBERCHZ1.BACKDOCLINE[:i];
  DYNCANC01 = :t_ModifDBERCHZ1.DYNCANC01[:i];
  DYNCANC02 = :t_ModifDBERCHZ1.DYNCANC02[:i];
  DYNCANC03 = :t_ModifDBERCHZ1.DYNCANC03[:i];
  DYNCANC04 = :t_ModifDBERCHZ1.DYNCANC04[:i];
  DYNCANC05 = :t_ModifDBERCHZ1.DYNCANC05[:i];
  DYNCANC = :t_ModifDBERCHZ1.DYNCANC[:i];
  DYNEXEC = :t_ModifDBERCHZ1.DYNEXEC[:i];
  LRATESTEP = :t_ModifDBERCHZ1.LRATESTEP[:i];
  PEB = :t_ModifDBERCHZ1.PEB[:i];
  OPLFDNR = :t_ModifDBERCHZ1.OPLFDNR[:i];
  STAFO = :t_ModifDBERCHZ1.STAFO[:i];
  ARTMENGE = :t_ModifDBERCHZ1.ARTMENGE[:i];
  STATTART = :t_ModifDBERCHZ1.STATTART[:i];
  TIMECONTRL = :t_ModifDBERCHZ1.TIMECONTRL[:i];
  TCNUMTOR = :t_ModifDBERCHZ1.TCNUMTOR[:i];
  TCDENOMTOR = :t_ModifDBERCHZ1.TCDENOMTOR[:i];
  TIMTYPQUOT = :t_ModifDBERCHZ1.TIMTYPQUOT[:i];
  AKTIV = :t_ModifDBERCHZ1.AKTIV[:i];
  KONZVER = :t_ModifDBERCHZ1.KONZVER[:i];
  PERTYP = :t_ModifDBERCHZ1.PERTYP[:i];
  ERCHV_ANCHOR = :t_ModifDBERCHZ1.ERCHV_ANCHOR[:i];
  OUCONTRACT = :t_ModifDBERCHZ1.OUCONTRACT[:i];
  IURU_VOL = :t_ModifDBERCHZ1.IURU_VOL[:i];
  IURU_RAO = :t_ModifDBERCHZ1.IURU_RAO[:i];
  IURU_FOR = :t_ModifDBERCHZ1.IURU_FOR[:i];
  IURU_FIS = :t_ModifDBERCHZ1.IURU_FIS[:i];
  IURU_COT = :t_ModifDBERCHZ1.IURU_COT[:i];
  IURU_CTT = :t_ModifDBERCHZ1.IURU_CTT[:i];
  IURU_MIN = :t_ModifDBERCHZ1.IURU_MIN[:i];
  IURU_IND = :t_ModifDBERCHZ1.IURU_IND[:i];
  IURU_MWSKZ = :t_ModifDBERCHZ1.IURU_MWSKZ[:i];
  IUSK_MWSKZ_OLD = :t_ModifDBERCHZ1.IUSK_MWSKZ_OLD[:i];
  V_ABRMENGE = :t_ModifDBERCHZ1.V_ABRMENGE[:i];
  N_ABRMENGE = :t_ModifDBERCHZ1.N_ABRMENGE[:i];
  V_ZAHL1 = :t_ModifDBERCHZ1.V_ZAHL1[:i];
  N_ZAHL1 = :t_ModifDBERCHZ1.N_ZAHL1[:i];
  V_ZAHL2 = :t_ModifDBERCHZ1.V_ZAHL2[:i];
  N_ZAHL2 = :t_ModifDBERCHZ1.N_ZAHL2[:i];
  V_ZAHL3 = :t_ModifDBERCHZ1.V_ZAHL3[:i];
  N_ZAHL3 = :t_ModifDBERCHZ1.N_ZAHL3[:i];
  V_ZAHL4 = :t_ModifDBERCHZ1.V_ZAHL4[:i];
  N_ZAHL4 = :t_ModifDBERCHZ1.N_ZAHL4[:i];
  V_ZEITANT = :t_ModifDBERCHZ1.V_ZEITANT[:i];
  N_ZEITANT = :t_ModifDBERCHZ1.N_ZEITANT[:i];
  CLT_TST = :t_ModifDBERCHZ1.CLT_TST[:i];
  
  update "OTEBW_OZ"."REMOTE_DBERCHZ1_CHG"  set CLT_PROCESSED = 'X' 
  where MANDT=:MANDT 
  and BELNR=:BELNR 
  and BELZEILE=:BELZEILE 
  and CLT_TST=:CLT_TST;
  
  update "OTEBW_OZ"."DBERCHZ1_CHG" set CLT_TST_TO = TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3') 
  where MANDT=:MANDT 
  and BELNR=:BELNR 
  and BELZEILE=:BELZEILE 
  and CLT_TST_TO = TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') 
  and CLT_TST<TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3');

if :t_ModifDBERCHZ1.CLT_ACTION[:i]='I' then
  
  insert into "OTEBW_OZ"."DBERCHZ1" (MANDT,BELNR,BELZEILE,CSNO,BELZART,ABSLKZ,DIFFKZ,BUCHREL,MENGESTREL,BETRSTREL,STGRQNT,STGRAMT,PRINTREL,AKLASSE,BRANCHE,TVORG,GEGEN_TVORG,TAX_TVORG,LINESORT,AB,BIS,TIMTYPZA,SCHEMANR,SNO,PROGRAMM,MASSBILL,SAISON,TIMBASIS,TIMTYP,FRAN_TYPE,KONZIGR,TARIFTYP,TARIFNR,KONDIGR,STTARIF,GEWKEY,WDHFAKT,TEMP_AREA,DRCKSTUF,ABGGRND1,ABGGRND2,ABGGRND3,ABGGRND4,ABGGRND5,ABGGRND6,ABGGRND7,ABGGRND8,ABGGRND9,ABGGRND10,EIN01,EIN02,EIN03,EIN04,AUS01,AUS02,MASS1,MASS2,MASS3,MASS4,DATUM1,DATUM2,RABZUS,BACKCANC01,BACKCANC02,BACKCANC03,BACKCANC04,BACKCANC05,BACKCANC,BACKEXEC,BACKDOCNO,BACKDOCLINE,DYNCANC01,DYNCANC02,DYNCANC03,DYNCANC04,DYNCANC05,DYNCANC,DYNEXEC,LRATESTEP,PEB,OPLFDNR,STAFO,ARTMENGE,STATTART,TIMECONTRL,TCNUMTOR,TCDENOMTOR,TIMTYPQUOT,AKTIV,KONZVER,PERTYP,ERCHV_ANCHOR,OUCONTRACT,IURU_VOL,IURU_RAO,IURU_FOR,IURU_FIS,IURU_COT,IURU_CTT,IURU_MIN,IURU_IND,IURU_MWSKZ,IUSK_MWSKZ_OLD,V_ABRMENGE,N_ABRMENGE,V_ZAHL1,N_ZAHL1,V_ZAHL2,N_ZAHL2,V_ZAHL3,N_ZAHL3,V_ZAHL4,N_ZAHL4,V_ZEITANT,N_ZEITANT) 
  values  (:MANDT,:BELNR,:BELZEILE,:CSNO,:BELZART,:ABSLKZ,:DIFFKZ,:BUCHREL,:MENGESTREL,:BETRSTREL,:STGRQNT,:STGRAMT,:PRINTREL,:AKLASSE,:BRANCHE,:TVORG,:GEGEN_TVORG,:TAX_TVORG,:LINESORT,:AB,:BIS,:TIMTYPZA,:SCHEMANR,:SNO,:PROGRAMM,:MASSBILL,:SAISON,:TIMBASIS,:TIMTYP,:FRAN_TYPE,:KONZIGR,:TARIFTYP,:TARIFNR,:KONDIGR,:STTARIF,:GEWKEY,:WDHFAKT,:TEMP_AREA,:DRCKSTUF,:ABGGRND1,:ABGGRND2,:ABGGRND3,:ABGGRND4,:ABGGRND5,:ABGGRND6,:ABGGRND7,:ABGGRND8,:ABGGRND9,:ABGGRND10,:EIN01,:EIN02,:EIN03,:EIN04,:AUS01,:AUS02,:MASS1,:MASS2,:MASS3,:MASS4,:DATUM1,:DATUM2,:RABZUS,:BACKCANC01,:BACKCANC02,:BACKCANC03,:BACKCANC04,:BACKCANC05,:BACKCANC,:BACKEXEC,:BACKDOCNO,:BACKDOCLINE,:DYNCANC01,:DYNCANC02,:DYNCANC03,:DYNCANC04,:DYNCANC05,:DYNCANC,:DYNEXEC,:LRATESTEP,:PEB,:OPLFDNR,:STAFO,:ARTMENGE,:STATTART,:TIMECONTRL,:TCNUMTOR,:TCDENOMTOR,:TIMTYPQUOT,:AKTIV,:KONZVER,:PERTYP,:ERCHV_ANCHOR,:OUCONTRACT,:IURU_VOL,:IURU_RAO,:IURU_FOR,:IURU_FIS,:IURU_COT,:IURU_CTT,:IURU_MIN,:IURU_IND,:IURU_MWSKZ,:IUSK_MWSKZ_OLD,:V_ABRMENGE,:N_ABRMENGE,:V_ZAHL1,:N_ZAHL1,:V_ZAHL2,:N_ZAHL2,:V_ZAHL3,:N_ZAHL3,:V_ZAHL4,:N_ZAHL4,:V_ZEITANT,:N_ZEITANT);

elseif :t_ModifDBERCHZ1.CLT_ACTION[:i]='U' then

  update "OTEBW_OZ"."DBERCHZ1" set CSNO=:CSNO,BELZART=:BELZART,ABSLKZ=:ABSLKZ,DIFFKZ=:DIFFKZ,BUCHREL=:BUCHREL,MENGESTREL=:MENGESTREL,BETRSTREL=:BETRSTREL,STGRQNT=:STGRQNT,STGRAMT=:STGRAMT,PRINTREL=:PRINTREL,AKLASSE=:AKLASSE,BRANCHE=:BRANCHE,TVORG=:TVORG,GEGEN_TVORG=:GEGEN_TVORG,TAX_TVORG=:TAX_TVORG,LINESORT=:LINESORT,AB=:AB,BIS=:BIS,TIMTYPZA=:TIMTYPZA,SCHEMANR=:SCHEMANR,SNO=:SNO,PROGRAMM=:PROGRAMM,MASSBILL=:MASSBILL,SAISON=:SAISON,TIMBASIS=:TIMBASIS,TIMTYP=:TIMTYP,FRAN_TYPE=:FRAN_TYPE,KONZIGR=:KONZIGR,TARIFTYP=:TARIFTYP,TARIFNR=:TARIFNR,KONDIGR=:KONDIGR,STTARIF=:STTARIF,GEWKEY=:GEWKEY,WDHFAKT=:WDHFAKT,TEMP_AREA=:TEMP_AREA,DRCKSTUF=:DRCKSTUF,ABGGRND1=:ABGGRND1,ABGGRND2=:ABGGRND2,ABGGRND3=:ABGGRND3,ABGGRND4=:ABGGRND4,ABGGRND5=:ABGGRND5,ABGGRND6=:ABGGRND6,ABGGRND7=:ABGGRND7,ABGGRND8=:ABGGRND8,ABGGRND9=:ABGGRND9,ABGGRND10=:ABGGRND10,EIN01=:EIN01,EIN02=:EIN02,EIN03=:EIN03,EIN04=:EIN04,AUS01=:AUS01,AUS02=:AUS02,MASS1=:MASS1,MASS2=:MASS2,MASS3=:MASS3,MASS4=:MASS4,DATUM1=:DATUM1,DATUM2=:DATUM2,RABZUS=:RABZUS,BACKCANC01=:BACKCANC01,BACKCANC02=:BACKCANC02,BACKCANC03=:BACKCANC03,BACKCANC04=:BACKCANC04,BACKCANC05=:BACKCANC05,BACKCANC=:BACKCANC,BACKEXEC=:BACKEXEC,BACKDOCNO=:BACKDOCNO,BACKDOCLINE=:BACKDOCLINE,DYNCANC01=:DYNCANC01,DYNCANC02=:DYNCANC02,DYNCANC03=:DYNCANC03,DYNCANC04=:DYNCANC04,DYNCANC05=:DYNCANC05,DYNCANC=:DYNCANC,DYNEXEC=:DYNEXEC,LRATESTEP=:LRATESTEP,PEB=:PEB,OPLFDNR=:OPLFDNR,STAFO=:STAFO,ARTMENGE=:ARTMENGE,STATTART=:STATTART,TIMECONTRL=:TIMECONTRL,TCNUMTOR=:TCNUMTOR,TCDENOMTOR=:TCDENOMTOR,TIMTYPQUOT=:TIMTYPQUOT,AKTIV=:AKTIV,KONZVER=:KONZVER,PERTYP=:PERTYP,ERCHV_ANCHOR=:ERCHV_ANCHOR,OUCONTRACT=:OUCONTRACT,IURU_VOL=:IURU_VOL,IURU_RAO=:IURU_RAO,IURU_FOR=:IURU_FOR,IURU_FIS=:IURU_FIS,IURU_COT=:IURU_COT,IURU_CTT=:IURU_CTT,IURU_MIN=:IURU_MIN,IURU_IND=:IURU_IND,IURU_MWSKZ=:IURU_MWSKZ,IUSK_MWSKZ_OLD=:IUSK_MWSKZ_OLD,V_ABRMENGE=:V_ABRMENGE,N_ABRMENGE=:N_ABRMENGE,V_ZAHL1=:V_ZAHL1,N_ZAHL1=:N_ZAHL1,V_ZAHL2=:V_ZAHL2,N_ZAHL2=:N_ZAHL2,V_ZAHL3=:V_ZAHL3,N_ZAHL3=:N_ZAHL3,V_ZAHL4=:V_ZAHL4,N_ZAHL4=:N_ZAHL4,V_ZEITANT=:V_ZEITANT,N_ZEITANT=:N_ZEITANT 
  where MANDT=:MANDT  
  and BELNR=:BELNR  
  and BELZEILE=:BELZEILE ;

elseif :t_ModifDBERCHZ1.CLT_ACTION[:i]='D' then
  
  delete from "OTEBW_OZ"."DBERCHZ1" where MANDT=:MANDT and BELNR=:BELNR and BELZEILE=:BELZEILE;

end if;
end for;

END;
