PROCEDURE "OTEBW_OZ"."OZ::TRAN_OZ_ERDK" ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
declare i int;
declare Cnt int;
declare CLT_TST nvarchar(17);
declare MANDT NVARCHAR(000003);
declare OPBEL NVARCHAR(000012);
declare DRUCKDAT NVARCHAR(000008);
declare FAEDN NVARCHAR(000008);
declare FAEDS NVARCHAR(000008);
declare SKTPZ DECIMAL(000005,000000);
declare BUDAT NVARCHAR(000008);
declare BLDAT NVARCHAR(000008);
declare STOKZ NVARCHAR(000001);
declare INTOPBEL NVARCHAR(000012);
declare ERDZ_V NVARCHAR(000001);
declare ERDR_V NVARCHAR(000001);
declare ERDO_V NVARCHAR(000001);
declare ERDB_V NVARCHAR(000001);
declare ERDU_V NVARCHAR(000001);
declare ERDTS_V NVARCHAR(000001);
declare FICA_V NVARCHAR(000001);
declare TOTAL_AMNT DECIMAL(000013,000000);
declare TOTAL_WAER NVARCHAR(000005);
declare TOTAL_AMNT_USE NVARCHAR(000002);
declare PYMET NVARCHAR(000001);
declare ZSBTR DECIMAL(000013,000000);
declare ZLSCH NVARCHAR(000001);
declare NRZAS NVARCHAR(000012);
declare PARTNER NVARCHAR(000010);
declare VKONT NVARCHAR(000012);
declare PORTION NVARCHAR(000008);
declare ABRVORG NVARCHAR(000002);
declare FORMKEY NVARCHAR(000030);
declare FIKEY NVARCHAR(000012);
declare TOBRELEASD NVARCHAR(000001);
declare SIMULATED NVARCHAR(000001);
declare INVOICED NVARCHAR(000001);
declare ABWVK NVARCHAR(000012);
declare ABWBL NVARCHAR(000012);
declare ERGRD NVARCHAR(000002);
declare LANGU NVARCHAR(000001);
declare INVOICING_PARTY NVARCHAR(000010);
declare ERDAT NVARCHAR(000008);
declare ERNAM NVARCHAR(000012);
declare AEDAT NVARCHAR(000008);
declare AENAM NVARCHAR(000012);
declare BEGRU NVARCHAR(000004);
declare LOEVM NVARCHAR(000001);
declare VERART NVARCHAR(000003);
declare STO_BUDAT NVARCHAR(000008);
declare STO_OPBEL NVARCHAR(000012);
declare ICREASON NVARCHAR(000002);
declare MAZAE NVARCHAR(000006);
declare ITEMS_ARCHIVED NVARCHAR(000001);
declare EXKID NVARCHAR(000002);
declare EXBEL NVARCHAR(000016);
declare MAZAE_ABS NVARCHAR(000006);
declare PRINTLOCK NVARCHAR(000001);
declare EDIDISPATCH NVARCHAR(000001);
declare EDISENDDATE NVARCHAR(000008);
declare TAXDATE NVARCHAR(000008);
declare CREATION_TIME NVARCHAR(000006);
declare BILLING_PERIOD NVARCHAR(000010);
declare OSB_GROUP NVARCHAR(000003);
declare ZZREVERSE_DOC NVARCHAR(000012);
declare ZZDUE_DATE1 NVARCHAR(000008);
declare ZZDUE_DATE2 NVARCHAR(000008);
declare ZZ_ODL_PRIJEMCE NVARCHAR(000001);
declare REVLOCK NVARCHAR(000001);
declare SEPA_PRENOT NVARCHAR(000001);
declare INVDOCNO NVARCHAR(000012);
declare SELECTION_DATE NVARCHAR(000008);
declare OUTSORT1 NVARCHAR(000001);
declare ZSZLCAT NVARCHAR(000008);
declare NUMCOPY NVARCHAR(000005);
declare MOUNTED NVARCHAR(000001);
declare exit handler for sqlexception 
begin
  insert into OTEBW."Log" ("CurrSchema", "CurrObject", "ErrorCode", "ErrorMess") values (::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

-- ERDK

t_ModifERDK = select * from "OTEBW_OZ"."REMOTE_ERDK_CHG" where CLT_PROCESSED = ' ' order by CLT_TST;
select count(*) into Cnt from :t_ModifERDK;
insert into "OTEBW_OZ"."ERDK_CHG" select MANDT,OPBEL,DRUCKDAT,FAEDN,FAEDS,SKTPZ,BUDAT,BLDAT,STOKZ,INTOPBEL,ERDZ_V,ERDR_V,ERDO_V,ERDB_V,ERDU_V,ERDTS_V,FICA_V,TOTAL_AMNT,TOTAL_WAER,TOTAL_AMNT_USE,PYMET,ZSBTR,ZLSCH,NRZAS,PARTNER,VKONT,PORTION,ABRVORG,FORMKEY,FIKEY,TOBRELEASD,SIMULATED,INVOICED,ABWVK,ABWBL,ERGRD,LANGU,INVOICING_PARTY,ERDAT,ERNAM,AEDAT,AENAM,BEGRU,LOEVM,VERART,STO_BUDAT,STO_OPBEL,ICREASON,MAZAE,ITEMS_ARCHIVED,EXKID,EXBEL,MAZAE_ABS,PRINTLOCK,EDIDISPATCH,EDISENDDATE,TAXDATE,CREATION_TIME,BILLING_PERIOD,OSB_GROUP,ZZREVERSE_DOC,ZZDUE_DATE1,ZZDUE_DATE2,ZZ_ODL_PRIJEMCE,REVLOCK,SEPA_PRENOT,INVDOCNO,SELECTION_DATE,OUTSORT1,ZSZLCAT,NUMCOPY,MOUNTED,CLT_ACTION,CLT_PROCESSED,TO_TIMESTAMP(CLT_TST, 'YYYYMMDDHH24MISSFF3') AS CLT_TST,TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') as CLT_TST_TO from :t_ModifERDK;
insert into "OTEBW"."Log" ("CurrSchema", "CurrObject", "Cnt", "ErrorMess") values ('OTEBW_OZ', 'ERDK', ::rowcount, 'Transfer');

for i in 1 .. :Cnt do
  MANDT = :t_ModifERDK.MANDT[:i];
  OPBEL = :t_ModifERDK.OPBEL[:i];
  DRUCKDAT = :t_ModifERDK.DRUCKDAT[:i];
  FAEDN = :t_ModifERDK.FAEDN[:i];
  FAEDS = :t_ModifERDK.FAEDS[:i];
  SKTPZ = :t_ModifERDK.SKTPZ[:i];
  BUDAT = :t_ModifERDK.BUDAT[:i];
  BLDAT = :t_ModifERDK.BLDAT[:i];
  STOKZ = :t_ModifERDK.STOKZ[:i];
  INTOPBEL = :t_ModifERDK.INTOPBEL[:i];
  ERDZ_V = :t_ModifERDK.ERDZ_V[:i];
  ERDR_V = :t_ModifERDK.ERDR_V[:i];
  ERDO_V = :t_ModifERDK.ERDO_V[:i];
  ERDB_V = :t_ModifERDK.ERDB_V[:i];
  ERDU_V = :t_ModifERDK.ERDU_V[:i];
  ERDTS_V = :t_ModifERDK.ERDTS_V[:i];
  FICA_V = :t_ModifERDK.FICA_V[:i];
  TOTAL_AMNT = :t_ModifERDK.TOTAL_AMNT[:i];
  TOTAL_WAER = :t_ModifERDK.TOTAL_WAER[:i];
  TOTAL_AMNT_USE = :t_ModifERDK.TOTAL_AMNT_USE[:i];
  PYMET = :t_ModifERDK.PYMET[:i];
  ZSBTR = :t_ModifERDK.ZSBTR[:i];
  ZLSCH = :t_ModifERDK.ZLSCH[:i];
  NRZAS = :t_ModifERDK.NRZAS[:i];
  PARTNER = :t_ModifERDK.PARTNER[:i];
  VKONT = :t_ModifERDK.VKONT[:i];
  PORTION = :t_ModifERDK.PORTION[:i];
  ABRVORG = :t_ModifERDK.ABRVORG[:i];
  FORMKEY = :t_ModifERDK.FORMKEY[:i];
  FIKEY = :t_ModifERDK.FIKEY[:i];
  TOBRELEASD = :t_ModifERDK.TOBRELEASD[:i];
  SIMULATED = :t_ModifERDK.SIMULATED[:i];
  INVOICED = :t_ModifERDK.INVOICED[:i];
  ABWVK = :t_ModifERDK.ABWVK[:i];
  ABWBL = :t_ModifERDK.ABWBL[:i];
  ERGRD = :t_ModifERDK.ERGRD[:i];
  LANGU = :t_ModifERDK.LANGU[:i];
  INVOICING_PARTY = :t_ModifERDK.INVOICING_PARTY[:i];
  ERDAT = :t_ModifERDK.ERDAT[:i];
  ERNAM = :t_ModifERDK.ERNAM[:i];
  AEDAT = :t_ModifERDK.AEDAT[:i];
  AENAM = :t_ModifERDK.AENAM[:i];
  BEGRU = :t_ModifERDK.BEGRU[:i];
  LOEVM = :t_ModifERDK.LOEVM[:i];
  VERART = :t_ModifERDK.VERART[:i];
  STO_BUDAT = :t_ModifERDK.STO_BUDAT[:i];
  STO_OPBEL = :t_ModifERDK.STO_OPBEL[:i];
  ICREASON = :t_ModifERDK.ICREASON[:i];
  MAZAE = :t_ModifERDK.MAZAE[:i];
  ITEMS_ARCHIVED = :t_ModifERDK.ITEMS_ARCHIVED[:i];
  EXKID = :t_ModifERDK.EXKID[:i];
  EXBEL = :t_ModifERDK.EXBEL[:i];
  MAZAE_ABS = :t_ModifERDK.MAZAE_ABS[:i];
  PRINTLOCK = :t_ModifERDK.PRINTLOCK[:i];
  EDIDISPATCH = :t_ModifERDK.EDIDISPATCH[:i];
  EDISENDDATE = :t_ModifERDK.EDISENDDATE[:i];
  TAXDATE = :t_ModifERDK.TAXDATE[:i];
  CREATION_TIME = :t_ModifERDK.CREATION_TIME[:i];
  BILLING_PERIOD = :t_ModifERDK.BILLING_PERIOD[:i];
  OSB_GROUP = :t_ModifERDK.OSB_GROUP[:i];
  ZZREVERSE_DOC = :t_ModifERDK.ZZREVERSE_DOC[:i];
  ZZDUE_DATE1 = :t_ModifERDK.ZZDUE_DATE1[:i];
  ZZDUE_DATE2 = :t_ModifERDK.ZZDUE_DATE2[:i];
  ZZ_ODL_PRIJEMCE = :t_ModifERDK.ZZ_ODL_PRIJEMCE[:i];
  REVLOCK = :t_ModifERDK.REVLOCK[:i];
  SEPA_PRENOT = :t_ModifERDK.SEPA_PRENOT[:i];
  INVDOCNO = :t_ModifERDK.INVDOCNO[:i];
  SELECTION_DATE = :t_ModifERDK.SELECTION_DATE[:i];
  OUTSORT1 = :t_ModifERDK.OUTSORT1[:i];
  ZSZLCAT = :t_ModifERDK.ZSZLCAT[:i];
  NUMCOPY = :t_ModifERDK.NUMCOPY[:i];
  MOUNTED = :t_ModifERDK.MOUNTED[:i];
  CLT_TST = :t_ModifERDK.CLT_TST[:i];
  
  update "OTEBW_OZ"."REMOTE_ERDK_CHG" set CLT_PROCESSED = 'X' 
  where MANDT=:MANDT 
  and OPBEL=:OPBEL 
  and CLT_TST=:CLT_TST;
  
  
  update "OTEBW_OZ"."ERDK_CHG" set CLT_TST_TO = TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3') 
  where MANDT=:MANDT 
  and OPBEL=:OPBEL 
  and CLT_TST_TO = TO_TIMESTAMP ('99991231 23:59:59.999', 'YYYYMMDD HH24:MI:SS.FF3') 
  and CLT_TST<TO_TIMESTAMP(:CLT_TST, 'YYYYMMDDHH24MISSFF3');
  
if :t_ModifERDK.CLT_ACTION[:i]='I' then

  insert into "OTEBW_OZ"."ERDK" (MANDT,OPBEL,DRUCKDAT,FAEDN,FAEDS,SKTPZ,BUDAT,BLDAT,STOKZ,INTOPBEL,ERDZ_V,ERDR_V,ERDO_V,ERDB_V,ERDU_V,ERDTS_V,FICA_V,TOTAL_AMNT,TOTAL_WAER,TOTAL_AMNT_USE,PYMET,ZSBTR,ZLSCH,NRZAS,PARTNER,VKONT,PORTION,ABRVORG,FORMKEY,FIKEY,TOBRELEASD,SIMULATED,INVOICED,ABWVK,ABWBL,ERGRD,LANGU,INVOICING_PARTY,ERDAT,ERNAM,AEDAT,AENAM,BEGRU,LOEVM,VERART,STO_BUDAT,STO_OPBEL,ICREASON,MAZAE,ITEMS_ARCHIVED,EXKID,EXBEL,MAZAE_ABS,PRINTLOCK,EDIDISPATCH,EDISENDDATE,TAXDATE,CREATION_TIME,BILLING_PERIOD,OSB_GROUP,ZZREVERSE_DOC,ZZDUE_DATE1,ZZDUE_DATE2,ZZ_ODL_PRIJEMCE,REVLOCK,SEPA_PRENOT,INVDOCNO,SELECTION_DATE,OUTSORT1,ZSZLCAT,NUMCOPY,MOUNTED) 
  	values 
  (:MANDT,:OPBEL,:DRUCKDAT,:FAEDN,:FAEDS,:SKTPZ,:BUDAT,:BLDAT,:STOKZ,:INTOPBEL,:ERDZ_V,:ERDR_V,:ERDO_V,:ERDB_V,:ERDU_V,:ERDTS_V,:FICA_V,:TOTAL_AMNT,:TOTAL_WAER,:TOTAL_AMNT_USE,:PYMET,:ZSBTR,:ZLSCH,:NRZAS,:PARTNER,:VKONT,:PORTION,:ABRVORG,:FORMKEY,:FIKEY,:TOBRELEASD,:SIMULATED,:INVOICED,:ABWVK,:ABWBL,:ERGRD,:LANGU,:INVOICING_PARTY,:ERDAT,:ERNAM,:AEDAT,:AENAM,:BEGRU,:LOEVM,:VERART,:STO_BUDAT,:STO_OPBEL,:ICREASON,:MAZAE,:ITEMS_ARCHIVED,:EXKID,:EXBEL,:MAZAE_ABS,:PRINTLOCK,:EDIDISPATCH,:EDISENDDATE,:TAXDATE,:CREATION_TIME,:BILLING_PERIOD,:OSB_GROUP,:ZZREVERSE_DOC,:ZZDUE_DATE1,:ZZDUE_DATE2,:ZZ_ODL_PRIJEMCE,:REVLOCK,:SEPA_PRENOT,:INVDOCNO,:SELECTION_DATE,:OUTSORT1,:ZSZLCAT,:NUMCOPY,:MOUNTED);

elseif :t_ModifERDK.CLT_ACTION[:i]='U' then

  update "OTEBW_OZ"."ERDK" set DRUCKDAT=:DRUCKDAT,FAEDN=:FAEDN,FAEDS=:FAEDS,SKTPZ=:SKTPZ,BUDAT=:BUDAT,BLDAT=:BLDAT,STOKZ=:STOKZ,INTOPBEL=:INTOPBEL,ERDZ_V=:ERDZ_V,ERDR_V=:ERDR_V,ERDO_V=:ERDO_V,ERDB_V=:ERDB_V,ERDU_V=:ERDU_V,ERDTS_V=:ERDTS_V,FICA_V=:FICA_V,TOTAL_AMNT=:TOTAL_AMNT,TOTAL_WAER=:TOTAL_WAER,TOTAL_AMNT_USE=:TOTAL_AMNT_USE,PYMET=:PYMET,ZSBTR=:ZSBTR,ZLSCH=:ZLSCH,NRZAS=:NRZAS,PARTNER=:PARTNER,VKONT=:VKONT,PORTION=:PORTION,ABRVORG=:ABRVORG,FORMKEY=:FORMKEY,FIKEY=:FIKEY,TOBRELEASD=:TOBRELEASD,SIMULATED=:SIMULATED,INVOICED=:INVOICED,ABWVK=:ABWVK,ABWBL=:ABWBL,ERGRD=:ERGRD,LANGU=:LANGU,INVOICING_PARTY=:INVOICING_PARTY,ERDAT=:ERDAT,ERNAM=:ERNAM,AEDAT=:AEDAT,AENAM=:AENAM,BEGRU=:BEGRU,LOEVM=:LOEVM,VERART=:VERART,STO_BUDAT=:STO_BUDAT,STO_OPBEL=:STO_OPBEL,ICREASON=:ICREASON,MAZAE=:MAZAE,ITEMS_ARCHIVED=:ITEMS_ARCHIVED,EXKID=:EXKID,EXBEL=:EXBEL,MAZAE_ABS=:MAZAE_ABS,PRINTLOCK=:PRINTLOCK,EDIDISPATCH=:EDIDISPATCH,EDISENDDATE=:EDISENDDATE,TAXDATE=:TAXDATE,CREATION_TIME=:CREATION_TIME,BILLING_PERIOD=:BILLING_PERIOD,OSB_GROUP=:OSB_GROUP,ZZREVERSE_DOC=:ZZREVERSE_DOC,ZZDUE_DATE1=:ZZDUE_DATE1,ZZDUE_DATE2=:ZZDUE_DATE2,ZZ_ODL_PRIJEMCE=:ZZ_ODL_PRIJEMCE,REVLOCK=:REVLOCK,SEPA_PRENOT=:SEPA_PRENOT,INVDOCNO=:INVDOCNO,SELECTION_DATE=:SELECTION_DATE,OUTSORT1=:OUTSORT1,ZSZLCAT=:ZSZLCAT,NUMCOPY=:NUMCOPY,MOUNTED=:MOUNTED where MANDT=:MANDT  and OPBEL=:OPBEL ;

elseif :t_ModifERDK.CLT_ACTION[:i]='D' then
  
  delete from "OTEBW_OZ"."ERDK" 
  where MANDT=:MANDT 
  and OPBEL=:OPBEL;

end if;
end for;
END;
