PROCEDURE "OTEBW_OZ"."OZ::TRAN_OZ_DFKKBPTAXNUM" (in IN_load_uid nvarchar(32)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
declare exit handler for sqlexception begin

insert into "SAPABAP1"."ZBW_LOAD_LOG" ("MANDT", "TST", "LOAD_UID", "CNT", "CURR_SCHEMA", "CURR_OBJECT", "ERROR_CODE", "ERROR_MESS" )
values
('400', TO_VARCHAR(CURRENT_TIMESTAMP,'YYYYMMDDHHMMSS'), :IN_load_uid, 0, ::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

declare exit handler for sqlexception 
begin
insert into "OTEBW_OZ"."TRANSPORT_SMALL_TABLES_LOG" ("Log_ID","TST","CurrSchema", "CurrObject", "ErrorCode", "ErrorMess") 
	values ("OTEBW_OZ"."TRANSPORT_SMALL_TABLES_LOG_SEQ".nextval, current_timestamp, ::current_object_schema, ::current_object_name, ::sql_error_code, ::sql_error_message);
end;

truncate table "OTEBW_OZ"."DFKKBPTAXNUM";
insert into "OTEBW_OZ"."DFKKBPTAXNUM" select
	 CLIENT,
	PARTNER,
	TAXTYPE,
	TAXNUM,
	TAXNUMXL
from "OTEBW_OZ"."REMOTE_DFKKBPTAXNUM";
commit;


insert into "SAPABAP1"."ZBW_LOAD_LOG" ("MANDT", "TST", "LOAD_UID", "CNT", "CURR_SCHEMA", "CURR_OBJECT", "ERROR_CODE", "ERROR_MESS") 
values
('400',TO_VARCHAR(CURRENT_TIMESTAMP,'YYYYMMDDHHMMSS'), :IN_load_uid, ::rowcount, ::current_object_schema, ::current_object_name, 0, 'Transfer');
commit;
 
END;