var search_topic_data={"topics": [
{"file": "a900be9120ce425baa30451978b859f6.html",
"title": "SAP HANA Developer Guide for SAP HANA Web-Based Development Workbench",
"shortdesc": "This guide explains how to build applications using SAP HANA, including how to model data, how to write procedures, and how to build application logic in SAP HANA Extended Application Services, classic model."},
{"file": "7f99b0f952d04792912587c99e299ef5.html",
"title": "SAP HANA Web-Based Development Workbench",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) provides the SAP HANA Web-based Development Workbench that you can use to build and test development artifacts in the SAP HANA environment."},
{"file": "2d6b7d4aafeb4165a235f94efdde673a.html",
"title": "SAP HANA Web-based Development Workbench: Editor",
"shortdesc": "SAP HANA Web-based Development Workbench includes an all-purpose editor tool that enables you to maintain and run design-time objects in the SAP HANA Repository."},
{"file": "ab3a030b0e6240c8b159b42e9ee0f2a6.html",
"title": "Editor Settings",
"shortdesc": "Set your preferences for working with the Editor tool of the SAP HANA Web-based Development Workbench."},
{"file": "23e2b6b6591d4d7f9cf5ce8c44ddda9d.html",
"title": "Text Editing Keyboard Shortcuts",
"shortdesc": "In the editor, you can use common shortcut key codes to make quick edits in open files. Whether a feature is supported depends on the artifact type."},
{"file": "c714e810ba164fe0b3bb7c39f941beab.html",
"title": "Toolbar and Context-Menu Options in the Editor",
"shortdesc": "The SAP HANA Web-based Development Workbench Editor provides quick access to a variety of useful developer tools."},
{"file": "5429dbe1ba1f443ab206b7c4cf2c27d6.html",
"title": "Enabling the Text Search",
"shortdesc": "The text search functionality requires the full-text index queues to be active. The queues are, by default, active initially. As an administrator, you can check the status of the queues and restart them, if necessary, using the commands listed below."},
{"file": "6d0f9a91be984a03be91502061e70b75.html",
"title": "SAP HANA Web-based Development Workbench: Catalog",
"shortdesc": "SAP HANA Web-based Development Workbench includes a catalog tool that enables you to develop and maintain SQL catalog objects in the SAP HANA database."},
{"file": "39fc7ac35abe4ce9845eb5292b215fde.html",
"title": "Catalog Settings",
"shortdesc": "Set your general preferences for working with the Catalog tool of the SAP HANA Web-based Development Workbench."},
{"file": "03e04353469440bd9fe72a4c694bb128.html",
"title": "SQL Console",
"shortdesc": "The SQL console provides an SQL editor that allows you to work with SQL statements. You can enter, execute, and analyze SQL statements in the SQL console."},
{"file": "1ccc870eefd840e1acb5eaeecbc9ffb7.html",
"title": "SQL Result Table and Data Preview Table",
"shortdesc": "You can view the results of your SELECT queries in a result table on the Result tab of the SQL console. The table content view lets you preview table data as well as view the SQL query that was automatically generated to retrieve the data."},
{"file": "fc230a7d3cab45e4b57e0ca19b68e81f.html",
"title": "SAP HANA Web-based Development Workbench: Trace",
"shortdesc": "SAP HANA Web-based Development Workbench includes a trace tool that enables you to view the SAP HANA trace files."},
{"file": "11b1b93946f44349af5d7ea306f3c7ca.html",
"title": "Trace Settings",
"shortdesc": "Set your preferences for working with the Trace tool of the SAP HANA Web-based Development Workbench."},
{"file": "24aac2ccf4434b2b94c6fbd17e452817.html",
"title": "Database Trace",
"shortdesc": "The database trace records information about activity in the components of the SAP HANA database. You can use this information to analyze performance and to diagnose and debug errors."},
{"file": "1687f0e4067243ebabe2621aea3a798b.html",
"title": "SQL Trace",
"shortdesc": "The SQL trace collects information about all SQL statements executed on the XS Engine and saves it in a trace file for further analysis. It is inactive by default."},
{"file": "804c8462ee6441fbba2f8965e7e86275.html",
"title": "Plan Trace",
"shortdesc": "The plan trace enables you to collect SQL queries and their execution plans, executed in a given time frame for a particular application session. For each SQL query that has been traced, you can drill down the specific execution plan in order to analyze its performance."},
{"file": "998c99e2c62544beb0720427c9454fc2.html",
"title": "Getting Started with Application Development",
"shortdesc": "To develop applications using SAP HANA Extended Application Services (SAP HANA XS), you use a hierarchical package structure to organize the design-time artifacts that make up your applications. Within this structure you apply application descriptors to define which application content is to be exposed and to control access to it."},
{"file": "74ec53e0ddec471189042e4f3cda19fa.html",
"title": "Tutorial: Create a Simple SAPUI5 Application",
"shortdesc": "In this tutorial, you use the SAP HANA Web-based Development Workbench Editor to develop an SAPUI5 application that displays a button in a browser window which fades out when clicked."},
{"file": "b8533d241fbb4e5a906c415d2337c60a.html",
"title": "Tutorial: Create and Debug a Server-side JavaScript Application",
"shortdesc": "In this tutorial, you use the SAP HANA Web-based Development Workbench Editor to create and debug a server-side JavaScript application. The application displays a browser window where you can enter two values in URL parameters and display the results immediately in the browser window."},
{"file": "bce9064cd8194d71ac4ffb5bacc454ba.html",
"title": "Maintaining Repository Packages",
"shortdesc": "All content delivered as part of the application you develop for SAP HANA is stored in packages in the SAP HANA repository. The packages are arranged in a hierarchy that you define to help make the process of maintaining the packages transparent and logical."},
{"file": "d16f6a62b9394aab9272dcb51b9d2511.html",
"title": "Repository Package Hierarchy",
"shortdesc": "A package hierarchy can include sub-packages, for example, to isolate the data model from the business logic."},
{"file": "84ed7c9d6af74dac84d2688b644e3df8.html",
"title": "Define Repository Package Privileges",
"shortdesc": "In the SAP HANA repository, you can set package authorizations for a specific user or for a role."},
{"file": "fac894fe6e9547c4b2a2dc4c22d438ae.html",
"title": "Package Privileges",
"shortdesc": "Package privileges authorize actions on individual packages in the SAP HANA repository."},
{"file": "761d44ef49df4b57bc81ead4ac0fb6b1.html",
"title": "Package Privilege Options",
"shortdesc": "Package privileges authorize actions on individual packages in the SAP HANA repository. In the context of repository package authorizations, there is a distinction between native packages and imported packages."},
{"file": "8222cf9daf774805be24ea071736420f.html",
"title": "Create Repository Packages",
"shortdesc": "In SAP HANA, a package contains a selection of repository objects. You assemble a collection of packages into a delivery unit, which you can use to transport the repository objects between SAP HANA systems."},
{"file": "016a60fe929a4e9e89bbb3b6f7aad409.html",
"title": "SAP HANA Repository Packages and Namespaces",
"shortdesc": "In SAP HANA, a package typically consists of a collection of repository objects, which can be transported between systems. Multiple packages can be combined in a delivery unit (DU)."},
{"file": "afb6b9e928374fe29f08f006bd60589e.html",
"title": "Repository Package Types",
"shortdesc": "SAP HANA enables the use of various types of package, which are intended for use in particular scenarios."},
{"file": "14fc1c213bc04604b77e4ee0f72e921b.html",
"title": "Delete Repository Packages",
"shortdesc": "In SAP HANA development, repository packages are used to manage various elements of your application development project. Sometimes you need to delete a package that contains repository objects from other developers."},
{"file": "be15895c24ad4f00bebabeda31eeda3f.html",
"title": "Creating the Application Descriptors",
"shortdesc": "The application descriptors describe the framework in which an SAP HANA XS application runs. The framework defined by the application descriptors includes the root point in the package hierarchy where content is to be served to client requests, and who has access to the content."},
{"file": "a1bbcc3e2d4c46daa06b56d4fbbd759f.html",
"title": "Define the Application Root Package",
"shortdesc": "Each application that you want to develop and deploy on SAP HANA Extended Application Services (SAP HANA XS) must have an application-descriptor (.xsapp) file."},
{"file": "fac9ec6995a0426c840f85ae5a8f6930.html",
"title": "The SAP HANA XS Application Descriptor",
"shortdesc": "Each application that you want to develop and deploy on SAP HANA Extended Application Services (SAP HANA XS) must have an application descriptor file. The application descriptor is the core file that you use to describe an application's framework within SAP HANA XS."},
{"file": "804d4967affd4a43b6a109e6f3987b21.html",
"title": "Enable Access to the Application Packages",
"shortdesc": "The application-access (.xsaccess) file enables you to specify who or what is authorized to access the content exposed by the application package and what content they are allowed to see."},
{"file": "5fe3b123826d4503aa66eb955a002821.html",
"title": "The Application-Access File",
"shortdesc": "SAP HANA XS enables you to define access to each individual application package that you want to develop and deploy."},
{"file": "a9fc5c220d744180850996e2f5d34d6c.html",
"title": "Application-Access File Keyword Options",
"shortdesc": "The application-access (.xsaccess) file enables you to specify whether or not to expose package content, which authentication method is used to grant access, and what content is visible."},
{"file": "8067eabb21af4448b73895982ec394a4.html",
"title": "Application-Access URL Rewrite Rules",
"shortdesc": "Rewriting URLs enables you to hide internal URL path details from external users, clients, and search engines. You define URL rewrite rules in the application-access file (.xsaccess) for each application or for an application hierarchy (an application package and its subpackages)."},
{"file": "2320f2d2d38e4616887d22635e915ba6.html",
"title": "Define Application Access Privileges",
"shortdesc": "The application-privileges (.xsprivileges) file allows you to define the authorization levels required to access an application, for example, to start the application or perform administrative actions on an application. You can assign the application privileges to the individual users who require them."},
{"file": "d5e35dfc8fd549ac90f9e17bf07a6458.html",
"title": "The Application-Privileges File",
"shortdesc": "In SAP HANA Extended Application Services (SAP HANA XS), the application-privileges (.xsprivileges) file can be used to create or define the authorization privileges required for access to an SAP HANA XS application, for example, to start the application or to perform administrative actions on an application. These privileges can be checked by an application at runtime."},
{"file": "67dc3968a9ff472eaefd0780bef6e6e5.html",
"title": "Maintaining Application Artifacts",
"shortdesc": "The design-time building blocks of an SAP HANA applications are called development objects (or artifacts), and many have a mandatory file extension, for example, .hdbtable (design-time table definition), .hdbview (design-time SQL-view definition), or .hdbrole (design-time role definition)."},
{"file": "d9299101c244465e9431532edf06557d.html",
"title": "Design-Time Application Artifacts",
"shortdesc": "The design-time building blocks of your SAP HANA applications have a mandatory file extension, for example, .hdbtable (design-time table definition) or .hdbview (design-time SQL-view definition)."},
{"file": "d56a9b42004a429db272be717f5fe2a3.html",
"title": "File Versions",
"shortdesc": "The version history lets you view a list of file versions, compare one version of a file with another one, and revert a file to a previous version."},
{"file": "71ae27f77fe0441695cf1d6ad108e8dc.html",
"title": "Storing Source Code on GitHub",
"shortdesc": "You can use GitHub to store and share your source code."},
{"file": "a2d2ee27850e454986bfe65a968b2c29.html",
"title": "Maintaining Application Security",
"shortdesc": "As part of the application-development process, you must decide how to provide access to the applications you develop. Application access includes security-related matters such as authentication methods and communication protocols"},
{"file": "d5e6641f49884808b97d6c53b61037e6.html",
"title": "Set up Application Security",
"shortdesc": "To restrict access to the applications you develop, you must configure the application to work with particular authentication methods and communication protocols."},
{"file": "589d5f7495534496bcd13e26c39fe0bc.html",
"title": "Set up Application Authentication",
"shortdesc": "To restrict access to the applications you develop, you must configure the application to work with particular authentication methods and communication protocols."},
{"file": "ca340c09551c40b7837e773b9d051821.html",
"title": "Maintaining HTTP Destinations",
"shortdesc": "An HTTP destination defines connection details for services running on specific hosts whose details you want to define and distribute. The definition can be referenced by an application."},
{"file": "8013b1b9beb14bdabacbea6e4d7c4bb3.html",
"title": "Tutorial: Create an HTTP Destination",
"shortdesc": "Create an HTTP destination defining connection details for services running on specific hosts. The definition can be referenced by an application."},
{"file": "6efe500d91ee462c85cce7609646e17a.html",
"title": "HTTP Destination Configuration Syntax",
"shortdesc": "An HTTP destination defines connection details for services running on specific hosts whose details you want to define and distribute. Syntax rules apply to the contents of the HTTP destination configuration are checked when you activate the configuration in the repository."},
{"file": "64f3fad3b21a41c388339f0dc27001a5.html",
"title": "The HTTP Destination Extension",
"shortdesc": "An HTTP destination defines connection details for services running on specific hosts whose details you want to define and distribute. An extension to an HTTP destination provides additional information or modifies values set in the original configuration."},
{"file": "935805ae7f6641289a266b67e2a76704.html",
"title": "Tutorial: Create an OAuth Configuration Package",
"shortdesc": "Create the files required to enable a service that uses OAuth to authorize access to a resource running on a remote HTTP destination."},
{"file": "e5b5d3a830ff4beea17c3efafe452065.html",
"title": "OAuth Application Configuration Syntax",
"shortdesc": "The format and syntax required in a design-time artifact describing an OAuth application configuration."},
{"file": "4b9d546faeff48f2b0c3cb33abd6daeb.html",
"title": "OAuth Client Configuration Syntax",
"shortdesc": "The format and syntax required in a design-time artifact describing the OAuth client configuration."},
{"file": "6757a4e3ed9f42bd86c5b5c3b264e090.html",
"title": "OAuth Client Flavor Syntax",
"shortdesc": "The format and syntax required in a design-time artifact that describes the OAuth client flavors."},
{"file": "cf5651bde44d4c8796874182fdc8cdeb.html",
"title": "Setting up the Data Persistence Model in SAP HANA",
"shortdesc": "The persistence model defines the schema, tables, sequences, and views that specify what data to make accessible for consumption by XS applications and how."},
{"file": "b523afd66f5a40469573d9c47d7af831.html",
"title": "Creating the Persistence Model in Core Data Services",
"shortdesc": "Core data services (CDS) is an infrastructure that can be used to define and consume semantically rich data models in SAP HANA."},
{"file": "72ab5eadfad747b28f5c886b42373cc0.html",
"title": "Tutorial: Get Started with CDS",
"shortdesc": "You can use the Data Definition Language (DDL) to define a table, which is also referred to as an entity in SAP HANA Core Data Services (CDS). The finished artifact is saved in the repository with the extension (suffix) .hdbdd, for example, MyTable.hdbdd."},
{"file": "f2ccc3acb4bd40cd8100ac094a3216ca.html",
"title": "Create a CDS Document",
"shortdesc": "A CDS document is a design-time source file that contains definitions of the objects you want to create in the SAP HANA catalog."},
{"file": "da2b309f828c48b7beb65f137944d954.html",
"title": "CDS Documents",
"shortdesc": "CDS documents are design-time source files that contain DDL code that describes a persistence model according to rules defined in Core Data Services."},
{"file": "2761f7c8d0ba42f38f0f775d88dd219e.html",
"title": "External Artifacts in CDS",
"shortdesc": "You can define an artifact in one CDS document by referring to an artifact that is defined in another CDS document."},
{"file": "9f456278e9754ecfb26df3be10bdc2b7.html",
"title": "CDS Naming Conventions",
"shortdesc": "Rules and restrictions apply to the names of CDS documents and the package in which the CDS document resides."},
{"file": "7031e3f7fa9c4830960907dc795d6360.html",
"title": "CDS Namespaces",
"shortdesc": "The namespace is the path to the package in the SAP HANA Repository that contains CDS artifacts such as entities, contexts, and views."},
{"file": "952a2d4bba95447bbc5b7ce1be6f4f4d.html",
"title": "CDS Contexts",
"shortdesc": "You can define multiple CDS-compliant entities (tables) in a single file by assigning them to a context."},
{"file": "8217aac86d9748d8b034797ecc8065b6.html",
"title": "CDS Annotations",
"shortdesc": "CDS supports built-in annotations, for example, @Catalog, @Schema, and @nokey, which are important elements of the CDS documents used to define CDS-compliant catalog objects. However, you can define your own custom annotations, too."},
{"file": "fd2a79e92a374d3596950d97f5386ba8.html",
"title": "User-Defined CDS Annotations",
"shortdesc": "In CDS, you can define your own custom annotations."},
{"file": "faf895ac467e42358572fc53fd2907f6.html",
"title": "CDS Annotation Usage Examples",
"shortdesc": "Reference examples of the use of user-defined CDS annotations."},
{"file": "7e6f697bf2a84b9bbf0fc1c5110c1210.html",
"title": "CDS Comment Types",
"shortdesc": "The Core Data Services (CDS) syntax enables you to insert comments into object definitions."},
{"file": "767c3cecdbcd440aa6c1a4cd75b5bfea.html",
"title": "Create an Entity in CDS",
"shortdesc": "The entity is the core artifact for defining the persistence model using the CDS syntax. You create a database entity as a design-time file in the SAP HANA repository."},
{"file": "adb056accefa46828b5cc806e11aa6ed.html",
"title": "CDS Entities",
"shortdesc": "In the SAP HANA database, as in other relational databases, a CDS entity is a table with a set of data elements that are organized using columns and rows."},
{"file": "78746b112d794f459978eb55b20a8a6f.html",
"title": "Entity Element Modifiers",
"shortdesc": "Element modifiers enable you to expand the definition of an entity element beyond the element's name and type. For example, you can specify if an entity element is the primary key or part of the primary key."},
{"file": "ad036c56b5e545ae8b31ece0ab95379f.html",
"title": "CDS Entity Syntax Options",
"shortdesc": "The entity is the core design-time artifact for persistence model definition using the CDS syntax."},
{"file": "a1a4312e106c4424b229a2c6addde003.html",
"title": "Create a User-Defined Structured Type in CDS",
"shortdesc": "A structured type is a data type comprising a list of attributes, each of which has its own data type. You create a user-defined structured type as a design-time file in the SAP HANA repository."},
{"file": "631bca8ba2a84521b218d3a25e1795fd.html",
"title": "CDS User-Defined Data Types",
"shortdesc": "User-defined data types reference existing structured types (for example, user-defined) or the individual types (for example, field, type, or context) used in another data-type definition."},
{"file": "2bd80e51e3f54ff39b6bfe97bbfbc956.html",
"title": "CDS Structured Type Definition",
"shortdesc": "A structured type is a data type comprising a list of attributes, each of which has its own data type. The attributes of the structured type can be defined manually in the structured type itself and reused either by another structured type or an entity."},
{"file": "7e4ee601c7404ec59c8446de79676c71.html",
"title": "CDS Structured Types",
"shortdesc": "A structured type is a data type comprising a list of attributes, each of which has its own data type. The attributes of the structured type can be defined manually in the structured type itself and reused either by another structured type or an entity."},
{"file": "cf394efd3fb4400f9c09d10315028515.html",
"title": "CDS Primitive Data Types",
"shortdesc": "In the Data Definition Language (DDL), primitive (or core) data types are the basic building blocks that you use to define entities or structure types with DDL."},
{"file": "86fb54bc8e3c48c29134bbda59b07020.html",
"title": "Create an Association in CDS",
"shortdesc": "Associations define relationships between entities. You create associations in a CDS entity definition, which is a design-time file in the SAP HANA repository."},
{"file": "6fcd6e5883f04de5b618a6d91141afb4.html",
"title": "CDS Associations",
"shortdesc": "Associations define relationships between entities."},
{"file": "809a42308d814b7ea1c8369e55591515.html",
"title": "CDS Association Syntax Options",
"shortdesc": "Associations define relationships between entities."},
{"file": "1f122dda87664cd8a5b7e827e380ba9b.html",
"title": "Create a View in CDS",
"shortdesc": "A view is a virtual table based on the dynamic results returned in response to an SQL statement. SAP HANA Extended Application Services (SAP HANA XS) enables you to use CDS syntax to create a database view as a design-time file in the repository."},
{"file": "b4080c0883c24d2dae38a60d7fbf07c8.html",
"title": "CDS Views",
"shortdesc": "A view is an entity that is not persistent; it is defined as the projection of other entities. SAP HANA Extended Application Services (SAP HANA XS) enables you to create a CDS view as a design-time file in the repository."},
{"file": "de9843e69bd14989b8a592cf3e6c95d7.html",
"title": "CDS View Syntax Options",
"shortdesc": "SAP HANA XS includes a dedicated, CDS-compliant syntax, which you must adhere to when using a CDS document to define a view as a design-time artifact."},
{"file": "3c6980ab6ddb45f7bf15ef67a461258e.html",
"title": "Spatial Types and Functions",
"shortdesc": "CDS supports the use of Geographic Information Systems (GIS) functions and element types in CDS-compliant entities and views."},
{"file": "b57824feaa2d492382c6bfcf6bd7aa9a.html",
"title": "Modifications to CDS Artifacts",
"shortdesc": "Changes to the definition of a CDS artifact result in changes to the corresponding catalog object. The resultant changes to the catalog object are made according to strict rules."},
{"file": "ae6d2dd6612f4f4fb29cdc01a4690377.html",
"title": "Tutorial: Import Data with CDS Table Import",
"shortdesc": "The table-import function is a data-provisioning tool that enables you to import data from comma-separated values (CSV) files into SAP HANA tables."},
{"file": "cf04d3f53a5c4374bae6a1fd9b040cea.html",
"title": "Data Provisioning Using Table Import",
"shortdesc": "You can import data from comma-separated values (CSV) into the SAP HANA tables using the SAP HANA Extended Application Services (SAP HANA XS) table-import feature."},
{"file": "5450fefd5a7549888883def4836cd41c.html",
"title": "Table-Import Configuration",
"shortdesc": "You can define the elements of a table-import operation in a design-time file; the configuration includes information about source data and the target table in SAP HANA."},
{"file": "d3f4a9edf44c47b29d5083e943f77320.html",
"title": "Table-Import Configuration-File Syntax",
"shortdesc": "The design-time configuration file used to define a table-import operation requires the use of a specific syntax. The syntax comprises a series of keyword=value pairs."},
{"file": "2e9be6a7d35e47ada215c6d3d2dd635f.html",
"title": "Table-Import Configuration Error Messages",
"shortdesc": "During the course of the activation of the table-import configuration and the table-import operation itself, SAP HANA checks for errors and displays the following information in a brief message."},
{"file": "d210cd005ffd459aa0e245c679685139.html",
"title": "Migrate an Entity from HDBTable to CDS (hdbdd)",
"shortdesc": "Migrate a design-time representation of a table from the .hdbtable syntax to the CDS-compliant .hdbdd syntax while retaining the underlying catalog table."},
{"file": "b538ea246c004a31925db4801d2821cc.html",
"title": "Migration Guidelines: hdbtable to CDS Entity",
"shortdesc": "Replace an existing hdbtable definition with the equivalent CDS document."},
{"file": "a83fe9b8de1c4f4bbee3eea675851a04.html",
"title": "SAP HANA to CDS Data-Type Mapping",
"shortdesc": "Mapping table for SAP HANA (hdbtable) and Core Data Services (CDS) types."},
{"file": "640ec6815f8f49b48162b819e182a464.html",
"title": "Creating the Persistence Model with HDBTable",
"shortdesc": "HDBTable is a language syntax that can be used to define a design-time representation of the artifacts that comprise the persistent data models in SAP HANA."},
{"file": "71633be425d2490b931cb71b5d613786.html",
"title": "Create a Schema",
"shortdesc": "A schema defines the container that holds database objects such as tables, views, and stored procedures. You need a schema to be able to write to the catalog."},
{"file": "6cdea002ce634a8c81181de92bc0d8ea.html",
"title": "Schema",
"shortdesc": "Relational databases contain a catalog that describes the various elements in the system. The catalog divides the database into sub-databases known as schema. A database schema enables you to logically group together objects such as tables, views, and stored procedures. Without a defined schema, you cannot write to the catalog."},
{"file": "d82209169eb542a9837bc2b733fecca2.html",
"title": "Tutorial: Create a Table",
"shortdesc": "In this tutorial, you use the SAP HANA Web-based Development Workbench Editor to create a table as a design-time file in the repository using the hdbtable syntax. In the catalog, you view the table definition and insert data into the table."},
{"file": "e19a2c794de549eeb065392096bc9ca3.html",
"title": "Tables",
"shortdesc": "In the SAP HANA database, as in other relational databases, a table is a set of data elements that are organized using columns and rows. A database table has a specified number of columns, defined at the time of table creation, but can have any number of rows. Database tables also typically have meta-data associated with them; the meta-data might include constraints on the table or on the values within particular columns."},
{"file": "0ac6ed61b9bc4886986eefe6ea0c5e3c.html",
"title": "Table Configuration Syntax",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) enables you to use the hdbtable syntax to create a database table as a design-time file in the repository. The design-time artifact that contains the table definition must adhere to the .hdbtable syntax specified below."},
{"file": "2892356bd7e3466bb0a7c8429f2f1f21.html",
"title": "Create a Reusable Table Structure",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) enables you to define the structure of a database table in a design-time file in the repository. You can reuse the table-structure definition to specify the table type when creating a new table."},
{"file": "e02495d09770498daae7a897bfcc5147.html",
"title": "Reusable Table Structures",
"shortdesc": "A table-structure definition is a template that you can reuse as a basis for creating new tables of the same type and structure. You can reference the table structure in an SQL statement (CREATE TABLE [...] like [...]) or an SQLScript procedure."},
{"file": "2b9b25f43d024e7eb0c2a734e933faae.html",
"title": "Create an SQL View",
"shortdesc": "A view is a virtual table based on the dynamic results returned in response to an SQL statement. SAP HANA Extended Application Services (SAP HANA XS) enables you to create a database view as a design-time file in the repository."},
{"file": "7b1ddcdb650c44308f5bf6339ed9b4b2.html",
"title": "SQL Views",
"shortdesc": "In SQL, a view is a virtual table based on the dynamic results returned in response to an SQL statement. Every time a user queries an SQL view, the database uses the view's SQL statement to recreate the data specified in the SQL view. The data displayed in an SQL view can be extracted from one or more database tables."},
{"file": "aa300f37f08f4f02bfa7f8ade507f0fa.html",
"title": "SQL View Configuration Syntax",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) enables you to use the hdbview syntax to create an SQL view as a design-time file in the repository. The design-time artifact that contains the SQL view definition must adhere to the .hdbview syntax specified below."},
{"file": "908c87c9cb7a465bb2fe2f3a7b1a1b54.html",
"title": "Create a Sequence",
"shortdesc": "A database sequence generates an automatically incremented list of unique numeric values according to the rules defined in the sequence specification. The numbers generated by a sequence can be used by applications, for example, to identify the rows and columns of a table."},
{"file": "301d1ef633974273ad44d2f38e4f4460.html",
"title": "Sequences",
"shortdesc": "A sequence is a database object that generates an automatically incremented list of numeric values according to the rules defined in the sequence specification. The sequence of numeric values is generated in an ascending or descending order at a defined increment interval, and the numbers generated by a sequence can be used by applications, for example, to identify the rows and columns of a table."},
{"file": "0479cfd36cb4448dbc9fbb854b3aee70.html",
"title": "Sequence Configuration Syntax",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) enables you to use the hdbsequence syntax to create a database sequence as a design-time file in the repository. The design-time artifact that contains the sequence definition must adhere to the .hdbsequence syntax specified below."},
{"file": "e9ce76f32da14e039fd428a14c483ed5.html",
"title": "Create a Synonym",
"shortdesc": "Extended Application Services (SAP HANA XS) enables you to create a local database synonym as a design-time file in the repository."},
{"file": "2a26e16e712c4dcaabd02f063fb88e05.html",
"title": "Synonyms",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) enables you to create a design-time representation of a local database synonym. The synonym enables you to refer to a table (for example, from a view) that only exists as a catalog object."},
{"file": "4c94a9b68b434d26af6d878e5f51b2aa.html",
"title": "Synonym Configuration Syntax",
"shortdesc": "A specific syntax is required to create a design-time representation of a local database synonym in SAP HANA Extended Application Services."},
{"file": "3e675de614b94147a5754093ef46bd2f.html",
"title": "Tutorial: Import Data with HDBTable Table Import",
"shortdesc": "The table-import function is a data-provisioning tool that enables you to import data from comma-separated values (CSV) files into SAP HANA database tables."},
{"file": "b1eed865efef4623a342f49631510406.html",
"title": "Data Provisioning Using Table Import",
"shortdesc": "You can import data from comma-separated values (CSV) into the SAP HANA tables using the SAP HANA Extended Application Services (SAP HANA XS) table-import feature."},
{"file": "ff7c1930dbcb4750b3c1843b3895699a.html",
"title": "Table-Import Configuration",
"shortdesc": "You can define the elements of a table-import operation in a design-time file; the configuration includes information about source data and the target table in SAP HANA."},
{"file": "44e08f234a0d42e9b96acd7a0cabdfcb.html",
"title": "Table-Import Configuration-File Syntax",
"shortdesc": "The design-time configuration file used to define a table-import operation requires the use of a specific syntax. The syntax comprises a series of keyword=value pairs."},
{"file": "2c76a29cf3e844c7a71bd8f3ecc40849.html",
"title": "Table-Import Configuration Error Messages",
"shortdesc": "During the course of the activation of the table-import configuration and the table-import operation itself, SAP HANA checks for errors and displays the following information in a brief message."},
{"file": "5734dd66d5b34784a2f3062b395f5b9e.html",
"title": "Developing Procedures",
"shortdesc": "SQL in SAP HANA includes extensions for creating procedures, which enables you to embed data-intensive application logic into the database, where it can be optimized for performance (since there are no large data transfers to the application and features such as parallel execution are possible). Procedures are used when other modeling objects, such as analytic or attribute views, are not sufficient."},
{"file": "8d06583f7ca04edab5ac1ed7ae90bfd8.html",
"title": "Create and Edit Procedures",
"shortdesc": "You can create and edit procedures in the SAP HANA Web-based Development Workbench Editor tool."},
{"file": "bed5219e1fcc46da8b27b8d1904396b1.html",
"title": "Define and Use Table Types in Procedures",
"shortdesc": "You can use a table type to define parameters for a procedure; the table type represents tabular results."},
{"file": "3efe4d38f24b4f7c8bbdabc65864e142.html",
"title": "Tutorial: Create an SQLScript Procedure that Uses Imperative Logic",
"shortdesc": "SQLScript procedures can make use of standard SQL statements to build a query that requests data and returns a specified result set."},
{"file": "589a38672fe94a94a0c222910ae3683a.html",
"title": "Tutorial: Create a Scalar User-Defined Function",
"shortdesc": "In SQL, a user-defined function (UDF) enables you to build complex logic into a single database object. A scalar UDF is a custom function that can be called in the SELECT and WHERE clauses of an SQL statement."},
{"file": "18a94543fe3f41f1b29e7c439f255b95.html",
"title": "Tutorial: Create a Table User-Defined Function",
"shortdesc": "In SQL, a user-defined function (UDF) enables you to build complex logic into a single database object that you can call from a SELECT statement. You can use a table user-defined function (UDF) to create a parameterized, fixed view of the data in the underlying tables."},
{"file": "0774f61a1f0c49cbbc1ab2e412da367a.html",
"title": "SQLScript Security Considerations",
"shortdesc": "You can develop secure procedures using SQLScript in SAP HANA by observing the following recommendations."},
{"file": "9da1c7a00c95422a85989dd37c71f082.html",
"title": "Debugging Procedures",
"shortdesc": "The SAP HANA SQLScript debugger allows you to debug and analyze procedures."},
{"file": "a85dd2bd1b4d47b4b2dcea6ed5dd8b46.html",
"title": "Debug Privileges for Procedures",
"shortdesc": "To debug procedures, you require the DEBUG privilege. To debug procedures in an external session, you also need the ATTACH DEBUGGER privilege."},
{"file": "be53ed7fece84817b6b1ef79698922bd.html",
"title": "Assign the DEBUG Privilege",
"shortdesc": "Grant the DEBUG privilege to your user. The DEBUG privilege is required to debug procedures that are owned by another user."},
{"file": "9e4f4a4f013e4715a10f64e74a9bbae8.html",
"title": "Assign the ATTACH DEBUGGER Privilege",
"shortdesc": "Grant the ATTACH DEBUGGER privilege to another user to allow them to debug procedures in your sessions."},
{"file": "20c54efad0a14879accf6290fdf674f1.html",
"title": "Debug Procedures",
"shortdesc": "You can debug and analyze SQLScript procedures in the editor or catalog of the SAP HANA Web-based Development Workbench."},
{"file": "ad7b10c87f1b4bf99db4785c28b2b875.html",
"title": "Debug an External Session",
"shortdesc": "You can execute procedures in the SAP HANA studio and debug and analyze them in the SAP HANA Web-based Development Workbench using an external session."},
{"file": "b80f8b626b3d44f882e8f2c3ff45952d.html",
"title": "Defining Web-based Data Access",
"shortdesc": "SAP HANA extended application services (SAP HANA XS) provide applications and application developers with access to the SAP HANA database using a consumption model that is exposed via HTTP."},
{"file": "7cc43e570b5648d69231fbd7a9c7bf90.html",
"title": "Data Access with OData in SAP HANA XS",
"shortdesc": "In SAP HANA Extended Application Services (SAP HANA XS), the persistence model (for example, tables, views, and stored procedures) is mapped to the consumption model that is exposed to clients - the applications you write to extract data from the SAP HANA database."},
{"file": "3adbdf8e0ca5408885e0520f8c3f58b4.html",
"title": "OData in SAP HANA XS",
"shortdesc": "OData is a resource-based web protocol for querying and updating data. OData defines operations on resources using HTTP commands (for example, GET, PUT, POST, and DELETE) and specifies the uniform resource indicator (URI) syntax to use to identify the resources."},
{"file": "502dbde2cbeb4f27b0e9b9887b0097b7.html",
"title": "Tutorial: Use the SAP HANA OData Interface",
"shortdesc": "In this tutorial, you create a simple OData service that exposes a SAP HANA database table as an OData collection so that it can be analyzed and displayed by client applications."},
{"file": "a908676c299443c18b88fec4c4298208.html",
"title": "Define the Data an OData Service Exposes",
"shortdesc": "An OData service exposes data stored in database tables or views as OData collections for analysis and display by client applications. However, first of all, you need to ensure that the tables and views to expose as an OData collection actually exist."},
{"file": "d6b3fe1a380f45e6b8845744dd77a540.html",
"title": "Create an OData Service Definition",
"shortdesc": "The OData service definition is a configuration file you use to specify which data (for example, views or tables) is exposed as an OData collection for analysis and display by client applications."},
{"file": "1a8c8a3eaefc4e2aa7ab23195b684b16.html",
"title": "OData Service Definitions",
"shortdesc": "The OData service definition is the mechanism you use to define what data to expose with OData, how, and to whom. Data exposed as an OData collection is available for analysis and display by client applications, for example, a browser that uses functions provided by an OData client library running on the client system."},
{"file": "a4245904522543f4b1917eeeae978f78.html",
"title": "OData Service-Definition Type Mapping",
"shortdesc": "During the activation of the OData service definition, SQL types defined in the service definition are mapped to EDM types according to a mapping table."},
{"file": "fda42888439142dc9984d3560bc68206.html",
"title": "OData Service-Definition Features",
"shortdesc": ""},
{"file": "aac50b77d6c64cbbaa979f70420336bd.html",
"title": "OData Service-Definition Examples",
"shortdesc": "The OData service definition describes how data exposed in an end point can be accessed by clients using the OData protocol."},
{"file": "51d401d204a54909abebcca6d0a8e058.html",
"title": "OData Empty Service",
"shortdesc": ""},
{"file": "f9f5f227e9f54cea9d9548c97860b7c0.html",
"title": "OData Namespace Definition",
"shortdesc": ""},
{"file": "d08f928ac047443e8c2b0a7070ac1d0b.html",
"title": "OData Object Exposure",
"shortdesc": ""},
{"file": "471609f56e354fe1b8f8e65b183202fa.html",
"title": "OData Property Projection",
"shortdesc": ""},
{"file": "e86a01a7699a46528624d44678d37ea5.html",
"title": "OData Key Specification",
"shortdesc": "The OData specification requires an EntityType to denote a set properties forming a unique key. In HANA only tables may have a unique key, the primary key. For all other (mostly view) objects you need to specify a key for the entity."},
{"file": "595f0a124602449695bf15711032186c.html",
"title": "OData Associations",
"shortdesc": ""},
{"file": "64560b807f004d8189b94385e5d02f1e.html",
"title": "OData Aggregation",
"shortdesc": ""},
{"file": "2ec97095dcbd420794670912e3bc9cd6.html",
"title": "OData Parameter Entity Sets",
"shortdesc": ""},
{"file": "17b479e1e928465baa07a5688fd5e355.html",
"title": "OData ETag Support",
"shortdesc": "This feature allows a service to define the fields that are to be included in the concurrency check."},
{"file": "79b338c0296c4518b83aa6b19133bba5.html",
"title": "OData Nullable Properties",
"shortdesc": "You can create a service to enable nullable properties in OData."},
{"file": "a5d3bea8a6ae43779ffaaae925554d0b.html",
"title": "OData Configurable Cache Settings",
"shortdesc": "You can create a service to configure the cache settings for the $metadata request to optimize performance."},
{"file": "81ccb259f8564776a4bcf0bb479dcc2e.html",
"title": "Custom Exits for OData Write Requests",
"shortdesc": "SAP HANA XS enables you to execute custom code at defined points of an OData write request."},
{"file": "3621f082a10241759f0ec01f56319ae3.html",
"title": "Tutorial: Creating a Validation Exit with SQLScript",
"shortdesc": "Use SQLScript to create a custom validation exit which runs server-side verification and data-consistency checks for an OData update operation."},
{"file": "8c83209439b745e9aa00b89b9fab96b6.html",
"title": "Tutorial: Creating a Modification Exit with SQLScript",
"shortdesc": "Register an SQL script as a modification exit for an OData create operation for an entity."},
{"file": "68c5a3bca9294e4098454dccbc73f7a9.html",
"title": "Tutorial: Creating a Modification Exit with XS JavaScript",
"shortdesc": "You can use server-side JavaScript to write a script which you register as a modification exit for an OData update operation for an entity."},
{"file": "73a801f25cbf425994f22b06d3850591.html",
"title": "OData Service Definition Language Syntax (XS Advanced)",
"shortdesc": "The OData Service Definition Language (OSDL) provides a set of keywords that enable you to set up an ODATA service definition file that specifies what data to expose, in what way, and to whom."},
{"file": "db41333d80e7490087224e9d6a0ca9b5.html",
"title": "OData Service Definition: SQL-EDM Type Mapping (XS Advanced)",
"shortdesc": "During the activation of the OData service definition, the SAP HANA SQL types are mapped to the required OData EDM types according to the rules specified in a mapping table."},
{"file": "83f6c5fb1c1b4c45a5c89877be01c585.html",
"title": "OData Security Considerations",
"shortdesc": "Enabling access to data by means of OData can create some security-related issues that you need to consider and address, for example, the data you want to expose, who can start the OData service, and so on."},
{"file": "234ef42fca2e4b92997e1d07cae61d3e.html",
"title": "OData Batch Requests (XS Advanced)",
"shortdesc": "The OData standard allows the collection of multiple individual HTTP requests into one single batched HTTP request."},
{"file": "cfe2dd14554a4ef6a1443e809c1a9a5c.html",
"title": "Data Access with XMLA in SAP HANA XS",
"shortdesc": "In SAP HANA Extended Application Services (SAP HANA XS) , the persistence model (for example, tables, views and stored procedures) is mapped to the consumption model that is exposed to clients - the applications you write to extract data from the SAP HANA database."},
{"file": "56fea2d06bc24547b47159d8bc5813eb.html",
"title": "XML for Analysis (XMLA)",
"shortdesc": "XML for Analysis (XMLA) uses Web-based services to enable platform-independent access to XMLA-compliant data sources for Online Analytical Processing (OLAP)."},
{"file": "f3846fcc3c49425dbaf375cda278301d.html",
"title": "Tutorial: Use the SAP HANA XMLA Interface",
"shortdesc": "You can use the XML for Analysis (XMLA) interface included in SAP HANA Extended Application Services (SAP HANA XS) to provide a service that enables XMLA-capable clients to query multidimensional cubes in SAP HANA."},
{"file": "f2bb77fff7794004be9505f5699f7325.html",
"title": "Define the Data an XMLA Service Exposes",
"shortdesc": "Define the tables and views to expose as an XMLA service."},
{"file": "822dd825ea4443008f93f192ee33d9c0.html",
"title": "Create an XMLA Service Definition",
"shortdesc": "The XMLA service definition is a file you use to specify which data is exposed as XMLA/MDX collections for analysis and display by client applications."},
{"file": "349990ca0aa3443785b9c0017020ea00.html",
"title": "XMLA Service Definition",
"shortdesc": "The XMLA service definition is a file you use to specify which data is exposed as XMLA collections. Exposed data is available for analysis and display by client applications, for example, a browser that uses functions provided either by the XMLA service running in SAP HANA XS or by an XMLA client library running on the client system."},
{"file": "17d879b54ba948aeb3586758b30cc0b0.html",
"title": "XMLA Security Considerations",
"shortdesc": "Enabling access to data by means of XMLA opens up some security considerations that you need to address, for example, the data you want to expose, who can start the XMLA service, and so on."},
{"file": "e9830a92f752438285a4629f27dde4f2.html",
"title": "Multidimensional Expressions (MDX)",
"shortdesc": "Multidimensional Expressions (MDX) is a language for querying multidimensional data that is stored in OLAP cubes."},
{"file": "8314a33ea1854c69ab945ea4e1e28828.html",
"title": "MDX Functions",
"shortdesc": "MDX in SAP HANA supports a variety of standard MDX functions."},
{"file": "7d386a7bcc49475db72d59805696f03e.html",
"title": "MDX Extensions",
"shortdesc": "SAP HANA supports several extensions to the MDX language, including additional predefined functions and support for variables."},
{"file": "5184d04f83e0494da7fa6bd3e75060cb.html",
"title": "Sibling_Ordinal Intrinsic Property",
"shortdesc": "The object Member includes a property called Sibling_Ordinal, that is equal to the 0-based position of the member within its siblings."},
{"file": "4645073d9cf041f88bf56cb2cbb286f5.html",
"title": "MembersAscendantsDescendants Function",
"shortdesc": "SAP HANA includes the MembersAscendantsDescendants function that enables you to get, for example, all ascendants and descendants of a specific member."},
{"file": "f1d8b188c90647959c72ec8c7ce1a59f.html",
"title": "Variables in MDX",
"shortdesc": "An MDX SELECT statement in SAP HANA enables you to send values for variables defined within modeling views."},
{"file": "0e5335b66a9e4c64993605fc24ccd6d1.html",
"title": "Using the SAP HANA REST API",
"shortdesc": "The SAP HANA REST Application Programming Interface (REST API) is based on and extends the Orion server and client APIs."},
{"file": "d6b92411a7604cb59f90ded3169c2071.html",
"title": "SAP HANA REST Info API",
"shortdesc": "The SAP HANA REST API includes an Info API that can be used to display information about the current version of the REST API."},
{"file": "c3dd9fded080465cbc194ab7aee650e6.html",
"title": "SAP HANA REST File API",
"shortdesc": "The SAP HANA REST API includes a File API which uses the basic HTTP methods GET, PUT, and POST to send requests. JSON is used as the default representation format."},
{"file": "51d6ed30a697419199e585eb2616e294.html",
"title": "SAP HANA REST Change-Tracking API",
"shortdesc": "The SAP HANA REST API includes a Change Tracking API which enables you to make use of specific lifecycle-management features that are included with the SAP HANA Repository via HTTP."},
{"file": "9c304aa2358d49a9af9720b083d83ece.html",
"title": "SAP HANA REST Metadata API",
"shortdesc": "The SAP HANA REST API includes a Metadata API which provides services to support search and autocompletion scenarios"},
{"file": "3dfb5f6b339c47d4a124252c2b15bbac.html",
"title": "SAP HANA REST Transfer API",
"shortdesc": "The SAP HANA REST Transfer API is used to import and export packages and files."},
{"file": "584dc72d2529488c94becfc0775ee12d.html",
"title": "SAP HANA REST Workspace API",
"shortdesc": "The Workspace API enables you to create and manipulate Repository workspaces and projects via HTTP."},
{"file": "90878018cccd40f7a4b6754c04e2d34a.html",
"title": "Writing Server-Side JavaScript Code",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) provide applications and application developers with access to the SAP HANA database using a consumption model that is exposed via HTTP."},
{"file": "d024177cfc5e49369cc6c4fe87d2faa7.html",
"title": "Data Access with JavaScript in SAP HANA XS",
"shortdesc": "In SAP HANA Extended Application Services, the persistence model (for example, tables, views and stored procedures) is mapped to the consumption model that is exposed via HTTP to clients - the applications you write to extract data from SAP HANA."},
{"file": "a2acd502e9544de298c3959f250127f5.html",
"title": "Using Server-Side JavaScript in SAP HANA XS",
"shortdesc": "SAP HANA application services (XS server) supports server-side application programming in JavaScript. The server-side application you develop can use a collection of JavaScript APIs to expose authorized data to client requests, for example, to be consumed by a client GUI such as a Web browser or any other HTTP client."},
{"file": "2c8099bd789a45319ba42d473caed082.html",
"title": "Tutorial: Write Server-Side JavaScript Application Code",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) supports server-side application programming in JavaScript. The server-side application you develop uses JavaScript APIs to expose authorized data to client requests, for example, for consumption by a client GUI such as a Web browser, SAPUI5 applications, or mobile clients."},
{"file": "140f8c2b93de4795a93f4f299337f973.html",
"title": "JavaScript Editor",
"shortdesc": "You can write server-side JavaScript using the JavaScript editor, which provides syntax validation and code highlighting."},
{"file": "8baf3ed9207c412dade729200e87fd19.html",
"title": "Displaying the Function Flow",
"shortdesc": "The function flow is a tool that allows you to view an outline list and code flow visualization of the functions called within a JavaScript file. It also lets you display code previews of function definitions as well as navigate directly to the function definitions in the source code."},
{"file": "5b2344c7ebed41709f20de3745a5c1f8.html",
"title": "Getting Immediate Feedback",
"shortdesc": "You can use an immediate feedback session to get a better understanding of how your XSJS function works and performs."},
{"file": "b5e65421b48c48fa87312a6023f4c414.html",
"title": "Server-Side JavaScript Security Considerations",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) external attacks such as cross-site scripting and forgery, and insufficient authentication."},
{"file": "0bfdc51943f74dde8d209506b8b582b0.html",
"title": "Server-Side JavaScript: SSL/HTTPS",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) external attacks such as cross-site scripting and forgery, and insufficient authentication. You can set up SAP HANA to use secure HTTP (HTTPS)."},
{"file": "3e9a0491d2af4b908081fbbee12bc8ba.html",
"title": "Server-Side JavaScript: Injection Flaws",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) injection flaws. Typically, injection flaws concern SQL injection and involve modifying the URL to expand the scope of the original request."},
{"file": "0e1c9fff826a4583be715386578fffc7.html",
"title": "Server-Side JavaScript: Cross-Site Scripting",
"shortdesc": "If you use server-side JavaScript to write your application code, bear in mind the potential for (and risk of) cross-site scripting (XSS) attacks. Cross-site scripting is a Web-based vulnerability that involves an attacker injecting JavaScript into a link with the intention of running the injected code on the target computer."},
{"file": "2040c1b7e478448cb9904c55ac06cac8.html",
"title": "Server-Side JavaScript: Broken Authentication",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) attack against authentication infrastructure. Leaks or flaws in the authentication or session management functions allow attackers to impersonate users and gain access to unauthorized systems and data."},
{"file": "67fd982246be45eea64ffef3dbef32c8.html",
"title": "Server-Side JavaScript: Insecure Object Reference",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) attacks using insecure references to objects."},
{"file": "e8a6bc904c0c48a182288604f467e84a.html",
"title": "Server-Side JavaScript: Cross-Site Request Forgery",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) cross-site request forgery (XSRF). Cross-site scripting is a web-based vulnerability that exploits the trust boundaries that exist between different websites running in the same web browser session."},
{"file": "6c70762623b54f4bb0e2d424fea5854a.html",
"title": "Server-Side JavaScript: Security Misconfiguration",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) attacks against the security configuration in place, for example, authentication mechanisms and authorization processes."},
{"file": "9fe8df534d86419297d834570a3e99bf.html",
"title": "Server-Side JavaScript: Insecure Storage",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) attacks against the insecure or lack of encryption of data assets."},
{"file": "f381b344b96c421597000a5c5b761c6d.html",
"title": "Server-Side JavaScript: Missing URL Restrictions",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) unauthorized access to URLs."},
{"file": "f8ccfb0dee61499abc2d71831c59c2d5.html",
"title": "Server-Side JavaScript: Transport Layer Protection",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) insufficient protection of the transport layer."},
{"file": "8c5ec75c27f543cb8b4c65c337b285ae.html",
"title": "Server-Side JavaScript: Invalid Redirection",
"shortdesc": "If you use server-side JavaScript to write your application code, bear in mind the potential for (and risk of) redirection and internal fowarding from the requested Web page."},
{"file": "ba17dcabaa5f4297b4c5bac8dd069f37.html",
"title": "Server-Side JavaScript: XML Processing Issues",
"shortdesc": "If you choose to use server-side JavaScript to write your application code, you need to bear in mind the potential for (and risk of) attacks aimed at the process used to parse XML input and generate the XML output."},
{"file": "d3c53d059efb40a491e07fc93c063a14.html",
"title": "Using Server-Side JavaScript Libraries",
"shortdesc": "The elements defined in normal server-side JavaScript programs cannot be accessed from other JavaScript programs. To enable the reuse of program elements, SAP HANA Extended Application Services support server-side JavaScript libraries."},
{"file": "8a9cdd1242654ccd86ba113630e77830.html",
"title": "Import Server-Side JavaScript Libraries",
"shortdesc": "Server-side JavaScript libraries are a special type of JavaScript program that can be imported and called in other JavaScript programs. You can use JavaScript libraries to perform simple, repetitive tasks, for example: handle forms and form date, manipulate date and time strings, parse URLs, and so on."},
{"file": "afcd1f7be0f34724a28d4e594cda252b.html",
"title": "Write Server-Side JavaScript Libraries",
"shortdesc": "Server-side JavaScript libraries are a special type of JavaScript program that can be imported and called in other JavaScript programs. You can use JavaScript libraries to perform simple, repetitive tasks, for example, to handle forms and form date, to manipulate date and time strings, to parse URLs, and so on."},
{"file": "c6bbca35b7734168ac585c0aef9bb527.html",
"title": "Using the Server-Side JavaScript APIs",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) provides a set of server-side JavaScript application programming interfaces (API) that enable you to configure your applications to interact with SAP HANA."},
{"file": "73cf0393c85b467eb948edba5cdad014.html",
"title": "Tutorial: Use the XSJS Outbound API",
"shortdesc": "The application package you create in this tutorial includes all the artifacts you need to enable your server-side JavaScript application to use the Outbound Connectivity API to request and obtain data via HTTP from a service running on a remote host."},
{"file": "584de7593b8748d8a8c6586613c2439e.html",
"title": "Tutorial: Call an XS Procedure with Table-Value Argument",
"shortdesc": "You can use the XS Procedures library to call stored procedures as if they were JavaScript functions."},
{"file": "17c4ada7f4214d4aabdcf941e178f27b.html",
"title": "Accessing Stored Procedures from XS JavaScript",
"shortdesc": "Call stored SAP HANA procedures from XS server-side JavaScript (XSJS) and process the results of the calls in JavaScript."},
{"file": "d051fb0e1a754a3193f5b823fbcb677e.html",
"title": "Tutorial: Query a CDS Entity using XS Data Services",
"shortdesc": "You can use the SAP HANA XS Data Services (XSDS) library to query CDS entities as if they were JavaScript objects."},
{"file": "0f1e4a3af9e34215a2ca1c570e381599.html",
"title": "Tutorial: Update a CDS Entity Using XS Data Services",
"shortdesc": "You can use the XS Data Services (XSDS) library to update CDS entities as if they were JavaScript objects."},
{"file": "0d2aa67a44a94b14ae80dc883a4c6419.html",
"title": "Creating Custom XS SQL Connections",
"shortdesc": "In SAP HANA Extended Application Services (SAP HANA XS), you use the SQL-connection configuration file to configure a connection to the database; the connection enables the execution of SQL statements from inside a server-side JavaScript application with credentials that are different to the credentials of the requesting user."},
{"file": "7a5520d5a91e41499f3f7209d9f3a940.html",
"title": "Create an XS SQL Connection Configuration",
"shortdesc": "The .xssqlcc file enables you to establish a database connection that you can use to execute SQL statements from inside your server-side JavaScript application with credentials that are different to the credentials of the requesting user."},
{"file": "740f8789a73340c2879246ebbaff6d5d.html",
"title": "The SQL Connection Configuration File",
"shortdesc": "The SQL-connection configuration file specifies the details of a connection to the database that enables the execution of SQL statements from inside a server-side (XS) JavaScript application with credentials that are different to the credentials of the requesting user."},
{"file": "7bd54b44581f447bb914fe3d364e2108.html",
"title": "SQL Connection Configuration Syntax",
"shortdesc": "The XS SQL connection-configuration file .xssqlcc uses pairs of keywords and values to define the SQL connection."},
{"file": "94bb9176134a43b09161cee597fbede6.html",
"title": "Setting the Connection Language in SAP HANA XS",
"shortdesc": "HTTP requests can define the language used for communication in the HTTP header Accept-Language. This header contains a prioritized list of languages (defined in the Browser) that a user is willing to accept. SAP HANA XS uses the language with the highest priority to set the language for the requested connection. The language setting is passed to the database as the language to be used for the database connection, too."},
{"file": "445b9667c4aa4a7b9a17b9b45eacb435.html",
"title": "Scheduling XS Jobs",
"shortdesc": "Scheduled jobs define recurring tasks that run in the background. The JavaScript API $.jobs allows developers to add and remove schedules from such jobs."},
{"file": "aaa76d92ab824a76b289fa54ece10033.html",
"title": "Tutorial: Schedule an XS Job",
"shortdesc": "The xsjob file enables you to run a service (for example, an XS JavaScript or an SQLScript) at a scheduled interval."},
{"file": "6c83a8cd49ac459e88cb0fbb94ee3f38.html",
"title": "The XS Job File",
"shortdesc": "The .xsjob file defines the details of a task that you want to run (for example, an XS JavaScript or an SQLScript) at a scheduled interval."},
{"file": "15e72de0ed4a4ce1aa1ad7483dbe6b37.html",
"title": "XS Job File Keyword Options",
"shortdesc": "The XS job file .xsjob uses a number of keywords to define the job that must be run at a scheduled interval."},
{"file": "891d9e6dd5144bac8c071ad155ddee8e.html",
"title": "Add or Delete a Job Schedule during Runtime",
"shortdesc": "The $.jobs application programming interface (API) enables you to manipulate the schedules for an XS job at runtime."},
{"file": "e00ed41fc4864b0694eaf84ceac12488.html",
"title": "Tracing Server-Side JavaScript",
"shortdesc": "The SAP HANA XS server-side JavaScript API provides tracing functions that enable your application to write predefined messages in the form of application-specific trace output in the xsengine trace files (xsengine*.trc) according to the trace level you specify, for example, info(information) or error."},
{"file": "fd9f274c20184e6a999c14b6994eaa51.html",
"title": "Tutorial: Trace a Server-Side JavaScript Application",
"shortdesc": "In this tutorial, you use the tracing functions provided by the server-side JavaScript API for SAP HANA XS to enable tracing in a JavaScript application. The application-specific trace messages are written into a trace file, according to the trace level you specify, for example, \"debug\", \"info\", \"warning\", \"error\", or \"fatal\"."},
{"file": "9fb91768c26d4093b041bb79c30df5d2.html",
"title": "Debugging Server-Side JavaScript",
"shortdesc": "SAP HANA XS provides an integrated debugger to enable you to debug the XS JavaScript code that you write."},
{"file": "bab5208d33194ab88432bf9e22a7f761.html",
"title": "Tutorial: Create and Debug a Server-side JavaScript Application",
"shortdesc": "In this tutorial, you use the SAP HANA Web-based Development Workbench Editor to create and debug a server-side JavaScript application. The application displays a browser window where you can enter two values in URL parameters and display the results immediately in the browser window."},
{"file": "a03830bd77cb424ebfee1469e1554878.html",
"title": "XSJS Debugger",
"shortdesc": "The SAP HANA Web-based Development Workbench provides an integrated debugger, which makes available the tools you need to debug server-side JavaScript code."},
{"file": "c57e3507fd2d4d76af39527484a614ae.html",
"title": "XSJS Debugger Role",
"shortdesc": "The JavaScript debugger included with SAP HANA Extended Application Services (SAP HANA XS) requires user authentication to start a debug session. SAP HANA XS includes a dedicated debugger role, which defines the permissions needed by a developer who wants to debug server-side JavaScript code."},
{"file": "21c571ea3a574595b05a7e8b8f852b17.html",
"title": "Debug Session Access",
"shortdesc": "You can grant other developers access to the debug sessions you use for debugging server-side JavaScript on SAP HANA XS."},
{"file": "a45b9e23c72c4fb7a4956011d2d77d2c.html",
"title": "Testing XS JavaScript Applications",
"shortdesc": "SAP HANA provides a test framework called XSUnit that enables you to set up automated tests for SAP HANA XS applications."},
{"file": "e83a5f3312d64a8c8d70104165b9cd84.html",
"title": "Automated Tests with XSUnit in SAP HANA",
"shortdesc": "XSUnit is an integrated test environment that enables you to set up automatic tests for SAP HANA XS applications."},
{"file": "6d9ad91e708f4914a3cc24d063d5a319.html",
"title": "Application Development Testing Roles",
"shortdesc": "Dedicated roles enable developers to access and use the tools provided with the SAP HANA XS test framework (XSUnit)."},
{"file": "9e7c377b90a448e8bc9ac87ab8070736.html",
"title": "Test an SAP HANA XS Application with XSUnit",
"shortdesc": "Use the XSUnit tools to set up automated testing of your applications in SAP HANA XS."},
{"file": "433a6f176b6d490f9e39b7ac07dfec8c.html",
"title": "XSUnit's Enhanced Jasmine Syntax",
"shortdesc": "The XSUnit test framework is a custom version of the JavaScript test framework Jasmine adapted to suit SAP HANA XS."},
{"file": "465fa1055fe841fa807ff6a8457b40ff.html",
"title": "XSUnit Test Tools Syntax",
"shortdesc": "Example syntax for the functions, assertions, and parameters required by the SAP HANA XSUnit test tools."},
{"file": "d9b353675af742f9a3e6c4be50ff7f12.html",
"title": "XSUnit Test Run Options",
"shortdesc": "The XSUnit tool suite includes a generic tool that you can use to run tests."},
{"file": "a82bf29fcf4844e5a4dbae84282e69b1.html",
"title": "XSUnit Test Examples",
"shortdesc": "XSUnit includes a selection of test packages that demonstrate the scope of tests you can perform on an SAP HANA XS application."},
{"file": "7932d63e3e874285b4e38a13cf14e1d5.html",
"title": "The Mockstar Test Environment",
"shortdesc": "Mockstar is a tool that is designed to enable you to isolate SAP HANA content in tests run by an automated test suite."},
{"file": "2c83d76fa6044659b53f9eab318b424b.html",
"title": "Mockstar Environment Example Syntax",
"shortdesc": "A basic example of the syntax required to set up the Mockstar test environment."},
{"file": "3a19c328d2664d7d9297e9a12847e23a.html",
"title": "XSUnit Troubleshooting Solutions",
"shortdesc": "Use trace files and other tools to fix problems with test operations."},
{"file": "079d34d3d8874633bc515cebe175b301.html",
"title": "Testing JavaScript with XSUnit",
"shortdesc": "Test an XS JavaScript using XSUnit test tools."},
{"file": "da4260179bba44f893209a0c60f319b5.html",
"title": "XSUnit's Jasmine Spy Syntax",
"shortdesc": "A command cheat sheet for the Jasmine Spy syntax."},
{"file": "25936341598b4048b72b28cffd2df7b2.html",
"title": "Testing HTTP Services with XSUnit",
"shortdesc": "XS JavaScript files that can be accessed by performing an HTTP call against the service defined in the XS JavaScript file."},
{"file": "9f7a9c9a6e0f453f808d271f07f9688c.html",
"title": "Testing JavaScript Functions with XSUnit",
"shortdesc": "Use XSUnit tools to test JavaScript code that depends on functions in your code, for example: dependencies on functions, libraries, or to database tables."},
{"file": "06392d74cde84f69bc222df2370f8de7.html",
"title": "Building UIs",
"shortdesc": "You can use the SAPUI5 user interface technology to build and adapt client applications based on SAP HANA."},
{"file": "552cf15b7d9245a49efffae951339adb.html",
"title": "Building User Interfaces with SAPUI5 for SAP HANA",
"shortdesc": ""},
{"file": "b6508f24563f459abaaaf2728a2f43ad.html",
"title": "Consuming Data and Services with SAPUI5 for SAP HANA",
"shortdesc": "SAP HANA Extended Application Services (SAP HANA XS) can be used to expose the database data model, with its tables, views and database procedures, to UI clients."},
{"file": "1e109b2e781941f7836110eca2c84df3.html",
"title": "SAPUI5 for SAP HANA Development Tutorials",
"shortdesc": "Tutorials are designed to extend task-based information to show you how to use real code and examples to build native SAP HANA applications. The tutorials provided here include examples of how to build simple SAPUI5 applications."},
{"file": "0f417e8384254a84bb527899a039e0bb.html",
"title": "Tutorial: Create a Hello-World SAPUI5 Application",
"shortdesc": "SAPUI5 provides a client-side HTML5 rendering library with a comprehensive set of standard controls and extensions that you can use to build a UI quickly and easily."},
{"file": "16f713d45f72429a8e4aca9fb5564d63.html",
"title": "Tutorial: Consume an XSJS Service from SAPUI5",
"shortdesc": "An XS server-side JavaScript (XSJS) application can be used to perform an action linked to an element such as a button or a text box in an SAPUI5 application."},
{"file": "c43f73be364d4dd3880931f18231cc52.html",
"title": "Tutorial: Consume an OData Service from SAPUI5",
"shortdesc": "An OData service can be used to provide the data required for display in an SAPUI5 application."},
{"file": "7b1aeee0bd10469bbd1e89e177030874.html",
"title": "Tutorial: Consume an OData Service with the CREATE Option",
"shortdesc": "An OData service can be used to provide the data required for display in an SAPUI5 application."},
{"file": "92d2a896ab244941bdb99eff94e77c17.html",
"title": "Setting Up Roles and Privileges",
"shortdesc": "Every user who wants to work directly with the SAP HANA database must have a database user with the necessary privileges. Although privileges can be granted to users directly, roles are the standard way to authorize users. A role is a collection of privileges."},
{"file": "19ad47fc3300416e9ff3265de18e68f4.html",
"title": "Create a Design-Time Role",
"shortdesc": "You create a role in the SAP HANA repository using the form-based role editor of the SAP HANA Web-based Development Workbench."},
{"file": "88cf3964e1174b8e80b7cd520fbbe34d.html",
"title": "Change a Design-Time Role",
"shortdesc": "You can change a design-time role in the SAP HANA Web-based Development Workbench using either the form-based role editor or the text editor."},
{"file": "e7f358b6e85b4610a2b62c5a25755fc0.html",
"title": "Database Roles",
"shortdesc": "A database role is a collection of privileges that can be granted to either a database user or another role in runtime."},
{"file": "56042042bc824e04b7755191034ec80a.html",
"title": "Roles as Repository Objects",
"shortdesc": "Roles created in the repository differ from roles created directly as runtime objects using SQL in several ways."},
{"file": "a45fcd37244d48e0991c056d6f0e830f.html",
"title": "Role Domain-Specific Language Syntax",
"shortdesc": "The design-time definition of a role is specified in a text file with the extension .hdbrole. Roles are defined using a domain-specific language (DSL)."},
{"file": "72cd2169c27d4760a5f66820cc4bae2b.html",
"title": "Custom Role for Developers",
"shortdesc": "Create a custom role for developers so that you can to grant developers all required privileges quickly and efficiently."},
{"file": "fb0f9b103d6940f28f3479b533c351e9.html",
"title": "Privileges",
"shortdesc": "Several privilege types are used in SAP HANA (system, object, analytic, package, and application)."},
{"file": "cadbcfc38b084808b80b3551b1cd756e.html",
"title": "System Privileges",
"shortdesc": "System privileges control general system activities."},
{"file": "2a942546f16846d597177b3bfbd1df04.html",
"title": "System Privileges (Reference)",
"shortdesc": "System privileges control general system activities."},
{"file": "d6311b15a7e74e01b3f660f7d175b318.html",
"title": "Object Privileges",
"shortdesc": "Object privileges are SQL privileges that are used to allow access to and modification of database objects."},
{"file": "2ab44c34eb5047a8899955bd1caae867.html",
"title": "Object Privileges (Reference)",
"shortdesc": "Object privileges are used to allow access to and modification of database objects, such as tables and views."},
{"file": "db08ea0cbb571014a386f851122958b2.html",
"title": "Analytic Privileges",
"shortdesc": "Analytic privileges grant different users access to different portions of data in the same view based on their business role. Within the definition of an analytic privilege, the conditions that control which data users see is either contained in an XML document or defined using SQL."},
{"file": "9c2cc44115a64029bd07d9e8c6556542.html",
"title": "Package Privileges",
"shortdesc": "Package privileges authorize actions on individual packages in the SAP HANA repository."},
{"file": "4d6ed4dc3db6423abd9f9a52a626618f.html",
"title": "Application Privileges",
"shortdesc": "In SAP HANA Extended Application Services (SAP HANA XS), application privileges define the authorization level required for access to an SAP HANA XS application, for example, to start the application or view particular functions and screens."},
{"file": "c205abb21d024089814048d4e00bbc15.html",
"title": "Run the File Access Check for Roles",
"shortdesc": "This report allows you to check which application files are accessible to users at runtime based on a specific role."},
{"file": "dec072ee45f34e9abdec89b71b88a276.html",
"title": "Creating Analytic Privileges",
"shortdesc": "You can create analytic privileges based on either an XML document (the \"classic\" variation) or an SQL definition."},
{"file": "55aebdcf8d564412834f75b03c127a22.html",
"title": "Create Static SQL Analytic Privileges",
"shortdesc": "For creating static SQL analytic privileges, you use attribute columns from views to define fixed restrictions on data access. These restrictions are defined in the analytic privilege editor at design time."},
{"file": "fcdc83c0e1ed4ab08d0e652997eac94f.html",
"title": "Create Classical XML-Based Analytic Privileges",
"shortdesc": "Create analytic privileges for information views and assign them to different users to provide selective access that are based on certain combinations of data."},
{"file": "d66f9a22ff2e405ab798d313d8835b99.html",
"title": "Analytic Privileges",
"shortdesc": "Analytic privileges grant different users access to different portions of data in the same view based on their business role. Within the definition of an analytic privilege, the conditions that control which data users see is either contained in an XML document or defined using SQL."},
{"file": "db1ed2c8bb571014b949bf017a41ba78.html",
"title": "Structure of XML-Based Analytic Privileges",
"shortdesc": "An analytic privilege consists of a set of restrictions against which user access to a particular attribute view, analytic view, or calculation view is verified. In an XML-based analytic privilege, these restrictions are specified in an XML document that conforms to a defined XML schema definition (XSD)."},
{"file": "e6109640fc9f4c5998cefd7324f9c812.html",
"title": "Dynamic Value Filters in the Attribute Restriction of XML-Based Analytic Privileges",
"shortdesc": "The attribute restriction of an XML-based analytic privilege specifies the value range that the user is permitted to access using value filters. In addition to static scalar values, stored procedures can be used to define filters."},
{"file": "b508f2d6a35a4059b7505afb7a3682df.html",
"title": "Example: Create an XML-Based Analytic Privilege with Dynamic Value Filter",
"shortdesc": "Use the CREATE STRUCTURED PRIVILEGE statement to create an XML-based analytic privilege that contains a dynamic procedure-based value filter and a fixed value filter in the attribute restriction."},
{"file": "349f423ce2154e3e9b39ed525d46aa94.html",
"title": "Structure of SQL-Based Analytic Privileges",
"shortdesc": "An analytic privilege consists of a set of restrictions against which user access to a particular attribute view, analytic view, calculation view, or SQL view is verified. In an SQL-based analytic privilege, these restrictions are specified as filter conditions that are fully SQL based."},
{"file": "63efa79c963d4243ad2a894e2b5bd10c.html",
"title": "Examples: Securing Views Using SQL-Based Analytic Privileges",
"shortdesc": "Use the CREATE STRUCTURED PRIVILEGE statement to create SQL-based analytic privileges for different scenarios."},
{"file": "db925756bb5710148dc1a517b80bc3bc.html",
"title": "Runtime Authorization Check of Analytic Privileges",
"shortdesc": "When a user requests access to data stored in an attribute, analytic, calculation, or SQL views, an authorization check based on analytic privileges is performed and the data returned to the user is filtered accordingly. The EFFECTIVE_STRUCTURED_PRIVILEGES system view can help you to troubleshoot authorization problems."},
{"file": "0771b269e9614ede894e3ae456c0f954.html",
"title": "Important Disclaimer for Features in SAP HANA Platform, Options and Capabilities",
"shortdesc": ""}]}