var search_topic_data={"topics": [
{"file": "c85779168a61404b92cb041197df80fb.html",
"title": "SAP HANA Modeling Guide for SAP HANA Web Workbench",
"shortdesc": "This guide explains how to create information views based on data that can be used for analytical purposes using the SAP HANA modeler. It Includes graphical & script based calculation views and analytic privileges that governs data access to information views."},
{"file": "c1bda01d4bf6405c97995a590545e97b.html",
"title": "Introduction to Modeling in SAP HANA",
"shortdesc": "Modeling refers to an activity of refining or slicing data in database tables by creating information views that depict a business scenario. You can use these information views for any reporting and decision making purposes."},
{"file": "d3d1bfdc6703410db5af1f7bdf1d8807.html",
"title": "Modeling in Web-based Environments",
"shortdesc": "Web-based development environments provide data modelers with tools that enable access to repository and catalog objects from a remote location, for example, using a Web browser."},
{"file": "ee3a95f465224fcfa90133ea1331c2f3.html",
"title": "Required Roles",
"shortdesc": "Before you start using the SAP HANA Web-based Development Workbench, the SAP HANA administrator must set up a user account for you in the database and assign the required modeling roles."},
{"file": "dca9644841514bdea35d2825eff02c58.html",
"title": "Attributes and Measures",
"shortdesc": "Attributes and measures form content data that you use for data modeling. The attributes represent the descriptive data, such as region and product. The measures represent quantifiable data such as revenue and quantity sold."},
{"file": "2b914d0dec5a4e928a98e6b69f5347ec.html",
"title": "Creating Calculation Views and Previewing its Output",
"shortdesc": "A calculation view is a powerful and flexible information view, which you can use to define more advanced slices on the data available in the SAP HANA database. Calculation views are simple and they mirror the functionality found in both attribute views and analytic views and much more."},
{"file": "ff5c31e99ae1484f9648330f553ae341.html",
"title": "Create Graphical Calculation Views",
"shortdesc": "Create graphical calculation views using a graphical editor to depict a complex business scenario with ease. You can create graphical calculation views to include layers of calculation logic and with measures from multiple data sources."},
{"file": "69ffef33b3a142dfa9f3c8b19f82ea6c.html",
"title": "Create Graphical Calculation Views with Star Joins",
"shortdesc": "Create graphical calculation view with star joins to join multiple dimensions with a single fact table. In other words, you use star joins to join a central entity to multiple entities that are logically related."},
{"file": "0f7444087f94428abf2321df8ba40d92.html",
"title": "Use Table Functions as a Data Source",
"shortdesc": "Table functions as a data source in graphical calculation views helps build calculation views for complex calculation scenarios. Using table functions in graphical calculation views are an alternate to script-based calculation views, which you generally use for building complex calculation views."},
{"file": "a27ee2517d014277836442d37d6af25a.html",
"title": "Supported View Nodes for Modeling Graphical Calculation Views",
"shortdesc": "Considering the different business scenario and reporting uses cases, SAP HANA modeler offers different view nodes to model graphical calculation views."},
{"file": "017d6b3c4f2d400fbedd728f9ae667f5.html",
"title": "Working With View Nodes",
"shortdesc": "View nodes form the buidling blocks of information views. These view nodes help you build complex, flexible and robust analytic models, and each view node type possess specialized capabilities that triggers advanced features in the database."},
{"file": "475b4bbe65a4403b8d56765604f8ccc4.html",
"title": "Create Joins",
"shortdesc": "Use join nodes in calculation views to query data from two data sources. The join nodes help limit the number of records or to combine records from both the data sources, so that they appears as one record in the query results."},
{"file": "101ced8b896c4bbfbd321917a5fda735.html",
"title": "Create Spatial Joins",
"shortdesc": "Create spatial joins by using the join nodes in graphical calculation views to query data from data sources that have spatial data."},
{"file": "a7818b94989b4dad9345221fa4526a64.html",
"title": "Supported Spatial Predicates",
"shortdesc": "SAP HANA modeler supports the following spatial predicates."},
{"file": "a40a9aa85353437aa7fd6db3c1bd7223.html",
"title": "Supported Spatial Data Types",
"shortdesc": "SAP HANA modeler offers spatial data types in its data model and query language for storing and accessing geospatial data."},
{"file": "905d411f657b4ee693be695897a3864a.html",
"title": "Text Joins",
"shortdesc": "A text join helps obtain language-specific data. It retrieves columns from a text table based on the userâ€™s session language."},
{"file": "83b33f593ddb4b2197cd280633e5289d.html",
"title": "Dynamic Joins",
"shortdesc": "After creating a join between two data sources, you can define the join property as dynamic. Dynamic joins improves the join execution process and help reduce the number of records that join node process at run time."},
{"file": "146a17ad521845fe8023f9c1c977562d.html",
"title": "Example: Dynamic Joins",
"shortdesc": ""},
{"file": "6100bb67b2e445329605a3b4650f6e46.html",
"title": "Optimize Join Execution",
"shortdesc": "While executing the join, by default, the query retrieves join columns from the database even if you don't specify it in the query. The query automatically includes the join columns into the SQL GROUP BY clause without you selecting them in the query."},
{"file": "7f38ba73af0d42b3b8da963f0df2b7cc.html",
"title": "Validate Joins",
"shortdesc": "SAP HANA modeler allows you to validate the join cardinality and identify whether you have maintained the referential integrity for the join tables."},
{"file": "aa24147f1a804e7f83ed5e05d6be8687.html",
"title": "Join Properties",
"shortdesc": "After creating a join, define its properties to obtain a desired output when you execute the join."},
{"file": "ae52a516a32244a3883139b4251b63f6.html",
"title": "Supported Join Types",
"shortdesc": "When creating a join between two tables, you specify the join type. The below table lists the supported join types in SAP HANA modeler."},
{"file": "ebecf41577b843048742a5bd9efad4e2.html",
"title": "Create Unions",
"shortdesc": "Use union nodes in graphical calculation views to combine the results of two or more data sources."},
{"file": "7e551afff33245fb83e80edd25e9a80d.html",
"title": "Example: Constant Columns",
"shortdesc": "Constant output columns help denote the underlying data from the source columns with constant values in the output. You can also map the unmapped source columns to a constant output column based on the business requirement."},
{"file": "b481e50d8927426187d1e50977ff4c23.html",
"title": "Empty Union Behavior",
"shortdesc": "The value of the Empty Union Behavior property for a data source in the union node, helps modeler determine whether any queries on union nodes with constant output columns shall return values if no other columns from the data source is queried."},
{"file": "bc4c7c14e8e546458a9c8c8df449a5f4.html",
"title": "Create Rank Nodes",
"shortdesc": "Use rank nodes in calculation views to partition the data for a set of partition columns, and perform an ORDER BY SQL operation on the partitioned data."},
{"file": "83ef43b2a0c84481af0933944293c3b9.html",
"title": "Example: Rank Nodes",
"shortdesc": "Rank nodes help you partition the data source for a set of partition columns and then perform an order by SQL operation on the partitioned set."},
{"file": "d00c142746904c80a5730614f567a0a3.html",
"title": "Filter Output of Aggregation or Projection View Nodes",
"shortdesc": "Apply filters on columns of projection or aggregation view nodes (except the default aggregation or projection node) to filter thier output."},
{"file": "256287e2132b478b9066017a4a4998e4.html",
"title": "Supported Operators for Filters",
"shortdesc": "The table below lists the operators and its meanings, which you can use while defining filter conditions."},
{"file": "63823f33372f4646b620927d15201f40.html",
"title": "Generate Time Data",
"shortdesc": "Generate time data into default time-related tables present in the _SYS_BI schema and use these tables in calculation views to add a time dimension."},
{"file": "174d575fe08c4b52a2b55c5194ebdaa5.html",
"title": "Time Range to Generate Time Data",
"shortdesc": "For the Gregorian calendar type, based on the granularity you choose, modeler defines certain restrictions on the time range for which you can generate time dimension data."},
{"file": "0e3ab487d5f64cfc9c3e227dfb623710.html",
"title": "Supported Calendar Types to Generate Time Data",
"shortdesc": "SAP HANA modeler supports generating time dimension data using the Fiscal or Gregorian calendar types."},
{"file": "71ba86c33a854a39b91f726f30571297.html",
"title": "Create Script-Based Calculation Views",
"shortdesc": "Create script-based calculation views to depict complex calculation scenarios by writing SQL script statements. It is a viable alternative to depict complex business scenarios, which you cannot achieve by creating graphical calculation views."},
{"file": "1d59af8b79fd46caa469b71c5114a788.html",
"title": "Supported Data Categories for Information Views",
"shortdesc": "SAP HANA modeler supports two types of data categories to classify calculation views. The table below provides more information on each of these data category types."},
{"file": "7767528c15d54ab9979ae1cf74f6d0fd.html",
"title": "Preview Calculation View Output",
"shortdesc": "After modeling calculation views based on your requirements, deploy them within SAP HANA modeler to preview and analyze the output data. You can also view the SQL query that modeler generates for the deployed calculation view."},
{"file": "fdaa17d49b124e329e867678cc8cc3e7.html",
"title": "SAP BusinessObjects Design Studio",
"shortdesc": "Use SAP BusinessObjects Design Studio to view output data with rich visualizations, and to perform advanced analysis using the labels and value axis. For example, to analyze the sales on a country basis, add Country to the labels axis and Sales to the value axis."},
{"file": "9afcec6cfaa243b8b8936fc919200685.html",
"title": "Working With Attributes and Measures",
"shortdesc": "Attributes and measures form content data that you use for data modeling. The attributes represent the descriptive data such as city and country and the measures represent quantifiable data such as revenue and quantity sold."},
{"file": "ddafe3203b5e415283a6223cd01e9943.html",
"title": "Create Counters",
"shortdesc": "If you want to count the number of distinct values of one or more attribute columns, then you create counters, which are special type of columns that displays the distinct count of attribute columns."},
{"file": "9bcb01bcd2cd4fb6a615025eef6bea9c.html",
"title": "Counter Properties",
"shortdesc": "After creating a counter, you can view its properties or change them based on your business requirement."},
{"file": "04531ded8de447a882933b612edcd9b0.html",
"title": "Example: Counters",
"shortdesc": "Counters help you count the number of distinct values for one or more of attribute columns."},
{"file": "b42838efbdc54eafb84163284a60ac9c.html",
"title": "Create Calculated Columns",
"shortdesc": "Create new output columns and calculate its values at runtime based on the result of an expression. You can use other column values, functions, input parameters or constants in the expression."},
{"file": "9c02b7bf5cad45e5857a92949c1c61e6.html",
"title": "Calculated Column Properties",
"shortdesc": "After creating a calculated attribute or a calculated measure, you can view its properties or change them based on your business requirements."},
{"file": "24f2c33d95c14a1d8f281f68838f5ff4.html",
"title": "Example: Calculated Measures",
"shortdesc": "Create a new measure column and calculate its value at runtime based on the result of an expression."},
{"file": "61a98e4dbade4c078b214605baa50ecb.html",
"title": "Example: Calculated Attributes",
"shortdesc": "Create a new attribute column and calculate its value at runtime based on the results of an expression."},
{"file": "a33fddcc3896443f8221d3fadc94e8dc.html",
"title": "Assign Semantics",
"shortdesc": "Assigning semantics to attributes and measures helps define the output structure of an information view, as they provide meaning to attributes and measures of an information view."},
{"file": "2365539c31b1470999661dbfde127f0f.html",
"title": "Extract and Copy Semantics From Underlying Data Sources",
"shortdesc": "Defining semantics for calculation views includes defining the output columns of the calculation views (its label, its label column, its aggregation type, and its semantic type) and the hierarchies. While defining the semantics for a calculation view, you can extract and copy the semantic definitions of columns and hierarchies from their underlying data sources."},
{"file": "0983c91600884e338ad8cb2d524b5173.html",
"title": "Propagate Columns to Semantics",
"shortdesc": "Propagate columns from underlying view nodes to the semantics node and to other view nodes that are in the joined path. In other words, you can reuse the output columns of underlying view nodes in other view nodes up to the semantic node."},
{"file": "2b97aed626ed487193ef59dc55ecb1f1.html",
"title": "Supported Semantic Types for Attributes",
"shortdesc": "Client tools use semantic types to represent data in appropriate format. The system supports the following semantic types for attributes."},
{"file": "28774b9788704c64a1cb726df1cd3d4c.html",
"title": "Supported Semantic Types for Measures",
"shortdesc": "The following semantic types are supported for measures."},
{"file": "0e229f548ddd482ea009769462b96ab9.html",
"title": "Create Restricted Columns",
"shortdesc": "Create restricted columns to restrict values of measures based on attribute restrictions. For example, you can choose to restrict the value for the REVENUE column only for REGION = APJ, and YEAR = 2012."},
{"file": "10372ea878964b118240585abd4ec428.html",
"title": "Restricted Column Properties",
"shortdesc": "After creating a restricted column, you can view its properties or change them based on your business requirements."},
{"file": "ef992f7914db45218f4bfd2aff05a8de.html",
"title": "Example: Restricted Columns",
"shortdesc": "Restricted columns help you restrict measure values based on attribute restrictions."},
{"file": "77da4b9b6da54529bc699f3338617e81.html",
"title": "Assign Variables",
"shortdesc": "Calculation views contain variables that are bound to specific attributes within the calculation view. Variables are runtime filters that help to filter attributes, based on values that users provide."},
{"file": "9083adef6c0542b6ba6867a2caa8798f.html",
"title": "Supported Variable Types",
"shortdesc": "SAP HANA modeling environment supports the following variable types:"},
{"file": "a172fa29c63e4881832530e24c9ed10a.html",
"title": "Create Input Parameters",
"shortdesc": "Input parameters helps you parameterize calculation views and execute them based on the values you provide to the input parameters at query runtime. The engine considers input parameters as the PLACEHOLDER clause of the SQL statement."},
{"file": "90b862fdefa54d608bc0706c5cbabee9.html",
"title": "Map Input Parameters or Variables",
"shortdesc": "If you are creating a calculation view by using other calculation views, attribute views or analytic views, which have input parameters or variables defined on it, then you can map the input parameters or variables of the underlying data sources with the input parameters or variables of the calculation view that you are creating."},
{"file": "d5c8230abb571014acc592c2c96d92bd.html",
"title": "Input Parameters",
"shortdesc": "You use input parameters to define internal parameterization of the view to obtain a desired functionality when you run the view."},
{"file": "53702c66ba804957af5e088999b3bf91.html",
"title": "Using Hierarchies for Reporting",
"shortdesc": "SAP HANA modeler helps create hierarchies to organize data in a tree structure for multidimensional reporting. Each hierarchy comprises of a set of levels having many-to-one relationships between each other and collectively these levels make up the hierarchical structure."},
{"file": "7b8813b65db3499fadc8f107cbd042ec.html",
"title": "Create Level Hierarchies",
"shortdesc": "In level hierarchies each level represents a position in the hierarchy. For example, a time dimension can have a hierarchy that represents data at the month, quarter, and year levels."},
{"file": "f4b5724b135e43159b5f9971c2fbd542.html",
"title": "Level Hierarchy Properties",
"shortdesc": "Based on your business requirements, you can define certain properties of level hierarchies. The value of these properties determines the characteristics of the hierarchy at runtime."},
{"file": "4501f78597104092b176f53dca37c4be.html",
"title": "Node Style",
"shortdesc": "Node style is applicable for level hierarchies, and helps modeler identify the format the node ID. For example, if the node ID must comprise of the level name and the node name in the reporting tools."},
{"file": "5ebe3d67931d46b1b6d9e3009c740cf6.html",
"title": "Create Parent-Child Hierarchies",
"shortdesc": "In parent-child hierarchies, you use a parent attribute that determines the relationship among the view attributes. Parent-child hierarchies have elements of the same type and do not contain named levels."},
{"file": "ab48b80a2b2e4388b295f997d02b6d08.html",
"title": "Parent-Child Hierarchy Properties",
"shortdesc": "Based on your business requirements, you can define certain properties of parent-child hierarchies. The value of these properties determines the characteristics of the hierarchy at runtime."},
{"file": "92d6d646791a44d1981587fa8eccbdd3.html",
"title": "Root Node Visibility",
"shortdesc": "Based on your business requirement, choose to add an additional root node to the hierarchy and place all other nodes as its descendants."},
{"file": "cf2a770de6924eaeadf5d1a2d0c495fd.html",
"title": "Orphan Nodes",
"shortdesc": "For orphan nodes in a hierarchy, SAP HANA modeler provides different options to handle them. For example, you can treat orphan nodes as root nodes or treat them as errors."},
{"file": "8aae3422a9a94fcd96918f88b080bdfe.html",
"title": "Using Currency and Unit of Measure Conversions",
"shortdesc": "If measures in your calculation views represent currency or unit values, associate them with currency codes or unit of measures. This helps you display the measure values along with currency codes or unit of measures at data preview or in reporting tools."},
{"file": "3da1c6b9d735423ba248e30a9bcfeee4.html",
"title": "Associate Measures with Currency",
"shortdesc": "If measures in your calculation views or analytic views represent currency or unit values, associate them with currency codes or unit of measures. This helps you display the measure values along with currency codes or unit of measures at data preview or in reporting tools."},
{"file": "bf96675b49ea466bb9109b8f52f70b8f.html",
"title": "Associate Measures with Unit of Measure",
"shortdesc": "If measures in calculation views represent unit values, associate the measures with a unit of measure. This helps you display the measure values along with the unit of measures at data preview or in reporting tools."},
{"file": "bfdd5a8a852c490e9347ee2c8ee31389.html",
"title": "Enable or Disable Attributes for Drilldown in Reporting Tools",
"shortdesc": "By default, the tool lets you drilldown the attributes or calculated attributes in the reporting tools. You can disable this behavior for selected attributes."},
{"file": "2454403be8254982995a377280bca348.html",
"title": "Supported Drilldown Types for Attributes",
"shortdesc": "Enable attributes in informatio views for drilldown or disable them for drilldown in reporting tools."},
{"file": "0d99a4dfba024fb0b3350b5096183879.html",
"title": "Assign Value Help for Attributes",
"shortdesc": "If you are using attribute data to provide values to variables and input parameters at runtime, you can assign a value help to that attribute in order to use values from other attributes, which are available within the same calculation view or in other tables or other calculation views."},
{"file": "623b44bc43314bac9ea0194d83652428.html",
"title": "Add Descriptions to Attributes",
"shortdesc": "In an information view, you can associate an attribute or a column having texts, as a label column to another attribute or column."},
{"file": "e9c930218b784dd68b71ed1ca30ad84f.html",
"title": "Group Related Measures",
"shortdesc": "In your analytic views or calculation views, if you are using multiple measures and if you want to organize them, for example, to segregate the planned measures with the actual measures, then you can create a folder and group all related measures within this folder."},
{"file": "0a28153f18b648ffb597790a0d7a832a.html",
"title": "Working With Calculation View Properties",
"shortdesc": "SAP HANA modeler allows you to define certain properties for calculation views. The modeler refers to the values of these properties, for example, to access the data from the database or identify how to execute the calculation view."},
{"file": "2175374c28a84f69ab125feb71a78ef7.html",
"title": "Filter Data for Specific Clients",
"shortdesc": "Obtain data from all clients or filter the calculation view data either with fixed client value or with session client value set for the user."},
{"file": "edcfd4e8bd9d41608830d13b437755c9.html",
"title": "Default Client Values",
"shortdesc": "Assign a default client to an calculation view and filter data at runtime based on the default client value. The table below lists the default client value types you can assign and their description."},
{"file": "ef9eef50b2b14fd3b4e3c8a2e6611351.html",
"title": "Enable Calculation Views for Time Travel Queries",
"shortdesc": "Time travel queries are queries against the historical states of the database. When you execute a time travel query on your information view, you can query the data at a specified time in past."},
{"file": "fdb3c7d5f6174837a62aeff37eb89570.html",
"title": "Invalidate Cached Content",
"shortdesc": "In order to maintain the significance of data cached for your calculation views, the tool supports time-based cache invalidation and transaction-based cache invalidation."},
{"file": "80087fd486cc4fa9bebbe758428b5eb2.html",
"title": "Enable Support for Cache Invalidation",
"shortdesc": "Enable cache invalidation for your SAP HANA system to invalidate or remove data from the cache after specific time intervals or when underlying data is modified."},
{"file": "d29674dbe46d406b811d14e855d6f63c.html",
"title": "Quick Reference: Calculation View Properties",
"shortdesc": "Considering different business scenarios, SAP HANA modeler allows you to define certain properties for calculation views. The value of these properties determines the characteristics of the view at runtime."},
{"file": "572935bd9958460a874d839f505d8342.html",
"title": "Defining Data Access Privileges",
"shortdesc": "This section describes how to create analytic privileges and assign them to different users to provide selective data access control to activated information views."},
{"file": "fcdc83c0e1ed4ab08d0e652997eac94f.html",
"title": "Create Classical XML-Based Analytic Privileges",
"shortdesc": "Create analytic privileges for information views and assign them to different users to provide selective access that are based on certain combinations of data."},
{"file": "6a47f94ab4284dc984bc693e36bd093f.html",
"title": "Supported Restriction Types in Analytic Privileges",
"shortdesc": "Define data access restrictions on information views using fixed restrictions or dynamic restrictions."},
{"file": "ac708f67889b4693ac2209465aab8e2b.html",
"title": "Create SQL Analytic Privileges",
"shortdesc": "SQL based analytic privileges provides you the flexibility to create analytic privileges within the familiar SQL environment. You can create and apply SQL analytic privileges for a selected group of models or apply them to all models across packages."},
{"file": "97bc5d137c49468a9bbe112b69d86cd5.html",
"title": "Static SQL Analytic Privileges",
"shortdesc": "Static SQL analytic privileges or fixed analytic privileges allows you to combine one or multiple filter conditions on the same attribute or different attributes using the logical AND or OR operators."},
{"file": "1d7e0202877843e0bb958c7463eaad20.html",
"title": "Dynamic SQL Analytic Privileges",
"shortdesc": "In dynamic analytic privileges, you use a database procedure to dynamically obtain the filter condition string at runtime. You can provide the database procedure value within the CONDITION PROVIDER clause."},
{"file": "349f423ce2154e3e9b39ed525d46aa94.html",
"title": "Structure of SQL-Based Analytic Privileges",
"shortdesc": "An analytic privilege consists of a set of restrictions against which user access to a particular attribute view, analytic view, calculation view, or SQL view is verified. In an SQL-based analytic privilege, these restrictions are specified as filter conditions that are fully SQL based."},
{"file": "63efa79c963d4243ad2a894e2b5bd10c.html",
"title": "Examples: Securing Views Using SQL-Based Analytic Privileges",
"shortdesc": "Use the CREATE STRUCTURED PRIVILEGE statement to create SQL-based analytic privileges for different scenarios."},
{"file": "4d8050d0fcc64028bd04e3c64bb45e37.html",
"title": "Additional Functionality for Calculation Views",
"shortdesc": "After modeling calculation views or at design time you can perform certain additional functions, which helps improve the efficieny of modeling calculation views."},
{"file": "3c220a87a3394ebd84bb1c097c98990b.html",
"title": "Performance Analysis",
"shortdesc": "Open calculation views in performance analysis mode and obtain information on the catalog tables. This information helps you analyze the possible performance impacts on information views at runtime. For example, you can obtain information on table partitions, number of rows in tables, and so on."},
{"file": "69dc8a9d3b634694b91d3893c26694b4.html",
"title": "Open Calculation Views in Performance Analysis Mode",
"shortdesc": "The number of rows in a data source and table partitions impact the performance of your queries. When you open an calculation view in performance analysis mode, you can obtain information on join tables, table partitions, table types and other useful information, which helps you analyze your calculation view and its possible performance impacts at runtime."},
{"file": "fc45db91bbf64467917b887f0cee884a.html",
"title": "Join Details",
"shortdesc": "If you have enabled the performance analysis mode by default, open an information view and select a join node with catalog tables to obtain join details."},
{"file": "d40621a1ab614286a4ec659ab85a5f28.html",
"title": "Data Source Details",
"shortdesc": "If you have enabled the performance analysis mode, open an information view and select a view node with catalog tables to obtain data source details."},
{"file": "17e972630c704c079cff3f7d433903b5.html",
"title": "Maintain Comments for Modeler Objects",
"shortdesc": "When you are modeling a calculation view, you can also maintain comments for the view or for its objects such as parameters, hierarchies, view nodes and so on. The comments can include, for example, information that provides more clarity on the calculation view or its objects for data modelers accessing the same view or its objects."},
{"file": "d770825bbb5710148ca7cd47cb086923.html",
"title": "Using Functions in Expressions",
"shortdesc": "This section describes the functions, which you can use while creating expressions for calculated attributes and calculated measures."},
{"file": "605f230b9c84430fbc3222da6980b065.html",
"title": "Conversion Functions",
"shortdesc": "Data type conversion functions are used to convert arguments from one data type to another, or to test whether a conversion is possible."},
{"file": "f5a9ca3718354a499a98ba61ae3da170.html",
"title": "String Functions",
"shortdesc": "String functions are scalar functions that perform an operation on a string input value and return a string or numeric value."},
{"file": "dfa820e65b3d4fb3a386156c2a88034a.html",
"title": "Mathematical Functions",
"shortdesc": "Scalar math functions perform a calculation, usually based on input values that are provided as arguments, and return a numeric value."},
{"file": "d5546c7e7da24b2db555c8ef2cdc91f0.html",
"title": "Date Functions",
"shortdesc": "Date and time functions are scalar functions that perform an operation on a date and time input value and returns either a string, numeric, or date and time value."},
{"file": "5411085513174ffd9fd202d3a2f52e67.html",
"title": "Miscellaneous Functions",
"shortdesc": "The table below lists the miscellaneous functions that you can use while creating expressions."},
{"file": "6560a2f93cec46bfa31cbc7b95b522a7.html",
"title": "Manage Calculation Views with Missing Objects",
"shortdesc": "If objects within a calculation view are missing, for example, if the objects or its references are deleted, then such calculation views are referred to as broken models. By using proxies, SAP HANA modeler helps you work with broken models and fix inconsistencies."},
{"file": "3ccf2a8c0129490182ee81310f7dc386.html",
"title": "Use Aliases for Table Names and Column Names",
"shortdesc": "You can assign one or more alternate names (or aliases) to tables. For example, if you want to improve the readability of a table name or if you want to add the same table again to your data foundation node, then you can use aliases to avoid name conflicts."},
{"file": "25c5effec239490a9f6fb5f37313dfe6.html",
"title": "Replacing Nodes and Data Sources",
"shortdesc": "Replace a view node with any of the other underlying view nodes or replace a data source in view node with other available data sources in the catalog object."},
{"file": "118483a6442a4b789a86652d4e813a98.html",
"title": "Replace a View Node in Calculation Views",
"shortdesc": "Replace a view node in a calculation view with any of its underlying nodes without performing a delete operation, and retain the semantic information of the changed node."},
{"file": "782879b0c66f462599e7130cc068ddbc.html",
"title": "Replace a Data Source in Calculation Views",
"shortdesc": "Replace a data source in a calculation view with another data source in the catalog object without performing a delete operation, and retain the semantic information of the changed node."},
{"file": "360b78efdc144cbda7269c0e35c08243.html",
"title": "Important Disclaimer for Features in SAP HANA Platform, Options and Capabilities",
"shortdesc": ""}]}